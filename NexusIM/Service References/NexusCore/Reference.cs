//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace NexusIM.NexusCore {
    using System;
    using System.Runtime.Serialization;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.FlagsAttribute()]
    [System.Runtime.Serialization.DataContractAttribute(Name="AuthenticationTokenTypes", Namespace="http://schemas.datacontract.org/2004/07/NexusCore.DataContracts")]
    internal enum AuthenticationTokenTypes : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AllowCoreLogin = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AllowSwarmConnect = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AllowLocationGet = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AllowAccountGet = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SingleUse = 4,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AccountInfo", Namespace="com.adrensoftware.nexus")]
    [System.SerializableAttribute()]
    internal partial class AccountInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AccountIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EnabledField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid GuidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProtocolTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UsernameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal int AccountId {
            get {
                return this.AccountIdField;
            }
            set {
                if ((this.AccountIdField.Equals(value) != true)) {
                    this.AccountIdField = value;
                    this.RaisePropertyChanged("AccountId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal bool Enabled {
            get {
                return this.EnabledField;
            }
            set {
                if ((this.EnabledField.Equals(value) != true)) {
                    this.EnabledField = value;
                    this.RaisePropertyChanged("Enabled");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal System.Guid Guid {
            get {
                return this.GuidField;
            }
            set {
                if ((this.GuidField.Equals(value) != true)) {
                    this.GuidField = value;
                    this.RaisePropertyChanged("Guid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string ProtocolType {
            get {
                return this.ProtocolTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ProtocolTypeField, value) != true)) {
                    this.ProtocolTypeField = value;
                    this.RaisePropertyChanged("ProtocolType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string Server {
            get {
                return this.ServerField;
            }
            set {
                if ((object.ReferenceEquals(this.ServerField, value) != true)) {
                    this.ServerField = value;
                    this.RaisePropertyChanged("Server");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string Username {
            get {
                return this.UsernameField;
            }
            set {
                if ((object.ReferenceEquals(this.UsernameField, value) != true)) {
                    this.UsernameField = value;
                    this.RaisePropertyChanged("Username");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ContactLocationInfo", Namespace="http://schemas.datacontract.org/2004/07/NexusCore.DataContracts")]
    [System.SerializableAttribute()]
    internal partial class ContactLocationInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private NexusIM.NexusCore.AccountInfo AccountInfoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LocationIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool MessagableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private NexusIM.NexusCore.LocationServiceType ServiceTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UsernameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal NexusIM.NexusCore.AccountInfo AccountInfo {
            get {
                return this.AccountInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountInfoField, value) != true)) {
                    this.AccountInfoField = value;
                    this.RaisePropertyChanged("AccountInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal int LocationId {
            get {
                return this.LocationIdField;
            }
            set {
                if ((this.LocationIdField.Equals(value) != true)) {
                    this.LocationIdField = value;
                    this.RaisePropertyChanged("LocationId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal bool Messagable {
            get {
                return this.MessagableField;
            }
            set {
                if ((this.MessagableField.Equals(value) != true)) {
                    this.MessagableField = value;
                    this.RaisePropertyChanged("Messagable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal NexusIM.NexusCore.LocationServiceType ServiceType {
            get {
                return this.ServiceTypeField;
            }
            set {
                if ((this.ServiceTypeField.Equals(value) != true)) {
                    this.ServiceTypeField = value;
                    this.RaisePropertyChanged("ServiceType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string Username {
            get {
                return this.UsernameField;
            }
            set {
                if ((object.ReferenceEquals(this.UsernameField, value) != true)) {
                    this.UsernameField = value;
                    this.RaisePropertyChanged("Username");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LocationServiceType", Namespace="http://schemas.datacontract.org/2004/07/NexusCore.DataContracts")]
    internal enum LocationServiceType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GoogleLatitude = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FireEagle = 1,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MyAccountInformation", Namespace="http://schemas.datacontract.org/2004/07/NexusCore.DataContracts")]
    [System.SerializableAttribute()]
    internal partial class MyAccountInformation : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string mFirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string mUsernameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string mFirstName {
            get {
                return this.mFirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.mFirstNameField, value) != true)) {
                    this.mFirstNameField = value;
                    this.RaisePropertyChanged("mFirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string mUsername {
            get {
                return this.mUsernameField;
            }
            set {
                if ((object.ReferenceEquals(this.mUsernameField, value) != true)) {
                    this.mUsernameField = value;
                    this.RaisePropertyChanged("mUsername");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserLocationData", Namespace="http://schemas.datacontract.org/2004/07/NexusCore.DataContracts")]
    [System.SerializableAttribute()]
    internal partial class UserLocationData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AccuracyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime LastUpdatedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double LatitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double LongitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RowIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private NexusIM.NexusCore.LocationServiceType ServiceTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal int Accuracy {
            get {
                return this.AccuracyField;
            }
            set {
                if ((this.AccuracyField.Equals(value) != true)) {
                    this.AccuracyField = value;
                    this.RaisePropertyChanged("Accuracy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal System.DateTime LastUpdated {
            get {
                return this.LastUpdatedField;
            }
            set {
                if ((this.LastUpdatedField.Equals(value) != true)) {
                    this.LastUpdatedField = value;
                    this.RaisePropertyChanged("LastUpdated");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal double Latitude {
            get {
                return this.LatitudeField;
            }
            set {
                if ((this.LatitudeField.Equals(value) != true)) {
                    this.LatitudeField = value;
                    this.RaisePropertyChanged("Latitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal double Longitude {
            get {
                return this.LongitudeField;
            }
            set {
                if ((this.LongitudeField.Equals(value) != true)) {
                    this.LongitudeField = value;
                    this.RaisePropertyChanged("Longitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal int RowId {
            get {
                return this.RowIdField;
            }
            set {
                if ((this.RowIdField.Equals(value) != true)) {
                    this.RowIdField = value;
                    this.RaisePropertyChanged("RowId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal NexusIM.NexusCore.LocationServiceType ServiceType {
            get {
                return this.ServiceTypeField;
            }
            set {
                if ((this.ServiceTypeField.Equals(value) != true)) {
                    this.ServiceTypeField = value;
                    this.RaisePropertyChanged("ServiceType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ISwarmMessage", Namespace="http://schemas.datacontract.org/2004/07/NexusCore.DataContracts")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(NexusIM.NexusCore.LocationMessage))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(NexusIM.NexusCore.DisconnectMessage))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(NexusIM.NexusCore.SwarmChatMessage))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(NexusIM.NexusCore.ProtocolReadyMessage))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(NexusIM.NexusCore.SwarmStatusChangeMessage))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(NexusIM.NexusCore.RequestMessage))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(NexusIM.NexusCore.RequestContactInfoMessage))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(NexusIM.NexusCore.ResponseMessage))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(NexusIM.NexusCore.RequestContactInfoResponseMessage))]
    internal partial class ISwarmMessage : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int mDeviceRecipientField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int mDeviceSenderField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal int mDeviceRecipient {
            get {
                return this.mDeviceRecipientField;
            }
            set {
                if ((this.mDeviceRecipientField.Equals(value) != true)) {
                    this.mDeviceRecipientField = value;
                    this.RaisePropertyChanged("mDeviceRecipient");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal int mDeviceSender {
            get {
                return this.mDeviceSenderField;
            }
            set {
                if ((this.mDeviceSenderField.Equals(value) != true)) {
                    this.mDeviceSenderField = value;
                    this.RaisePropertyChanged("mDeviceSender");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LocationMessage", Namespace="http://schemas.datacontract.org/2004/07/NexusCore.DataContracts")]
    [System.SerializableAttribute()]
    internal partial class LocationMessage : NexusIM.NexusCore.ISwarmMessage {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private NexusIM.NexusCore.LocationServiceType mServiceTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string mUidField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal NexusIM.NexusCore.LocationServiceType mServiceType {
            get {
                return this.mServiceTypeField;
            }
            set {
                if ((this.mServiceTypeField.Equals(value) != true)) {
                    this.mServiceTypeField = value;
                    this.RaisePropertyChanged("mServiceType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string mUid {
            get {
                return this.mUidField;
            }
            set {
                if ((object.ReferenceEquals(this.mUidField, value) != true)) {
                    this.mUidField = value;
                    this.RaisePropertyChanged("mUid");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DisconnectMessage", Namespace="http://schemas.datacontract.org/2004/07/NexusCore.DataContracts")]
    [System.SerializableAttribute()]
    internal partial class DisconnectMessage : NexusIM.NexusCore.ISwarmMessage {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string mReasonField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string mReason {
            get {
                return this.mReasonField;
            }
            set {
                if ((object.ReferenceEquals(this.mReasonField, value) != true)) {
                    this.mReasonField = value;
                    this.RaisePropertyChanged("mReason");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SwarmChatMessage", Namespace="http://schemas.datacontract.org/2004/07/NexusCore.DataContracts")]
    [System.SerializableAttribute()]
    internal partial class SwarmChatMessage : NexusIM.NexusCore.ISwarmMessage {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageContentsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RecipientField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid ViaAccountField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string MessageContents {
            get {
                return this.MessageContentsField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageContentsField, value) != true)) {
                    this.MessageContentsField = value;
                    this.RaisePropertyChanged("MessageContents");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string Recipient {
            get {
                return this.RecipientField;
            }
            set {
                if ((object.ReferenceEquals(this.RecipientField, value) != true)) {
                    this.RecipientField = value;
                    this.RaisePropertyChanged("Recipient");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal System.Guid ViaAccount {
            get {
                return this.ViaAccountField;
            }
            set {
                if ((this.ViaAccountField.Equals(value) != true)) {
                    this.ViaAccountField = value;
                    this.RaisePropertyChanged("ViaAccount");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProtocolReadyMessage", Namespace="http://schemas.datacontract.org/2004/07/NexusCore.DataContracts")]
    [System.SerializableAttribute()]
    internal partial class ProtocolReadyMessage : NexusIM.NexusCore.ISwarmMessage {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private NexusIM.NexusCore.AccountInfo AccountInfoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid ProtocolIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal NexusIM.NexusCore.AccountInfo AccountInfo {
            get {
                return this.AccountInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountInfoField, value) != true)) {
                    this.AccountInfoField = value;
                    this.RaisePropertyChanged("AccountInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal System.Guid ProtocolId {
            get {
                return this.ProtocolIdField;
            }
            set {
                if ((this.ProtocolIdField.Equals(value) != true)) {
                    this.ProtocolIdField = value;
                    this.RaisePropertyChanged("ProtocolId");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SwarmStatusChangeMessage", Namespace="http://schemas.datacontract.org/2004/07/NexusCore.DataContracts")]
    [System.SerializableAttribute()]
    internal partial class SwarmStatusChangeMessage : NexusIM.NexusCore.ISwarmMessage {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid mDeviceIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private NexusIM.NexusCore.SwarmStatusChangeTypes mTypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal System.Guid mDeviceId {
            get {
                return this.mDeviceIdField;
            }
            set {
                if ((this.mDeviceIdField.Equals(value) != true)) {
                    this.mDeviceIdField = value;
                    this.RaisePropertyChanged("mDeviceId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal NexusIM.NexusCore.SwarmStatusChangeTypes mType {
            get {
                return this.mTypeField;
            }
            set {
                if ((this.mTypeField.Equals(value) != true)) {
                    this.mTypeField = value;
                    this.RaisePropertyChanged("mType");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RequestMessage", Namespace="http://schemas.datacontract.org/2004/07/NexusCore.DataContracts")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(NexusIM.NexusCore.RequestContactInfoMessage))]
    internal partial class RequestMessage : NexusIM.NexusCore.ISwarmMessage {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid mMessageIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal System.Guid mMessageId {
            get {
                return this.mMessageIdField;
            }
            set {
                if ((this.mMessageIdField.Equals(value) != true)) {
                    this.mMessageIdField = value;
                    this.RaisePropertyChanged("mMessageId");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RequestContactInfoMessage", Namespace="http://schemas.datacontract.org/2004/07/NexusCore.DataContracts")]
    [System.SerializableAttribute()]
    internal partial class RequestContactInfoMessage : NexusIM.NexusCore.RequestMessage {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private NexusIM.NexusCore.AccountInfo mAccInfoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string mUsernameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal NexusIM.NexusCore.AccountInfo mAccInfo {
            get {
                return this.mAccInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.mAccInfoField, value) != true)) {
                    this.mAccInfoField = value;
                    this.RaisePropertyChanged("mAccInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string mUsername {
            get {
                return this.mUsernameField;
            }
            set {
                if ((object.ReferenceEquals(this.mUsernameField, value) != true)) {
                    this.mUsernameField = value;
                    this.RaisePropertyChanged("mUsername");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ResponseMessage", Namespace="http://schemas.datacontract.org/2004/07/NexusCore.DataContracts")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(NexusIM.NexusCore.RequestContactInfoResponseMessage))]
    internal partial class ResponseMessage : NexusIM.NexusCore.ISwarmMessage {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid mMessageIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal System.Guid mMessageId {
            get {
                return this.mMessageIdField;
            }
            set {
                if ((this.mMessageIdField.Equals(value) != true)) {
                    this.mMessageIdField = value;
                    this.RaisePropertyChanged("mMessageId");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RequestContactInfoResponseMessage", Namespace="http://schemas.datacontract.org/2004/07/NexusCore.DataContracts")]
    [System.SerializableAttribute()]
    internal partial class RequestContactInfoResponseMessage : NexusIM.NexusCore.ResponseMessage {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string mDisplayNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private InstantMessage.IMBuddyStatus mStatusField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string mDisplayName {
            get {
                return this.mDisplayNameField;
            }
            set {
                if ((object.ReferenceEquals(this.mDisplayNameField, value) != true)) {
                    this.mDisplayNameField = value;
                    this.RaisePropertyChanged("mDisplayName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal InstantMessage.IMBuddyStatus mStatus {
            get {
                return this.mStatusField;
            }
            set {
                if ((this.mStatusField.Equals(value) != true)) {
                    this.mStatusField = value;
                    this.RaisePropertyChanged("mStatus");
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SwarmStatusChangeTypes", Namespace="http://schemas.datacontract.org/2004/07/NexusCore.DataContracts")]
    internal enum SwarmStatusChangeTypes : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Added = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Removed = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Online = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Offline = 3,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.FlagsAttribute()]
    [System.Runtime.Serialization.DataContractAttribute(Name="MessageOptions", Namespace="http://schemas.datacontract.org/2004/07/NexusCore.DataContracts")]
    internal enum MessageOptions : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SendToInactiveDevices = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SendToActiveDevices = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SendToAllDevices = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SendToAccountMaster = 4,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PushChannelType", Namespace="http://schemas.datacontract.org/2004/07/NexusCore.DataContracts")]
    internal enum PushChannelType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GenericTcp = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GenericUdp = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MicrosoftPN = 2,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://www.adrensoftware.com/nexusim/", ConfigurationName="NexusCore.ICoreService")]
    internal interface ICoreService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.adrensoftware.com/nexusim/ICoreService/Login", ReplyAction="http://www.adrensoftware.com/nexusim/ICoreService/LoginResponse")]
        void Login(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.adrensoftware.com/nexusim/ICoreService/Login", ReplyAction="http://www.adrensoftware.com/nexusim/ICoreService/LoginResponse")]
        System.IAsyncResult BeginLogin(string username, string password, System.AsyncCallback callback, object asyncState);
        
        void EndLogin(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.adrensoftware.com/nexusim/ICoreService/LoginWithToken", ReplyAction="http://www.adrensoftware.com/nexusim/ICoreService/LoginWithTokenResponse")]
        void LoginWithToken(string token);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.adrensoftware.com/nexusim/ICoreService/LoginWithToken", ReplyAction="http://www.adrensoftware.com/nexusim/ICoreService/LoginWithTokenResponse")]
        System.IAsyncResult BeginLoginWithToken(string token, System.AsyncCallback callback, object asyncState);
        
        void EndLoginWithToken(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.adrensoftware.com/nexusim/ICoreService/Logout", ReplyAction="http://www.adrensoftware.com/nexusim/ICoreService/LogoutResponse")]
        void Logout();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.adrensoftware.com/nexusim/ICoreService/Logout", ReplyAction="http://www.adrensoftware.com/nexusim/ICoreService/LogoutResponse")]
        System.IAsyncResult BeginLogout(System.AsyncCallback callback, object asyncState);
        
        void EndLogout(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.adrensoftware.com/nexusim/ICoreService/GenerateToken", ReplyAction="http://www.adrensoftware.com/nexusim/ICoreService/GenerateTokenResponse")]
        string GenerateToken(NexusIM.NexusCore.AuthenticationTokenTypes types);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.adrensoftware.com/nexusim/ICoreService/GenerateToken", ReplyAction="http://www.adrensoftware.com/nexusim/ICoreService/GenerateTokenResponse")]
        System.IAsyncResult BeginGenerateToken(NexusIM.NexusCore.AuthenticationTokenTypes types, System.AsyncCallback callback, object asyncState);
        
        string EndGenerateToken(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.adrensoftware.com/nexusim/ICoreService/GetAccounts", ReplyAction="http://www.adrensoftware.com/nexusim/ICoreService/GetAccountsResponse")]
        System.Collections.Generic.List<NexusIM.NexusCore.AccountInfo> GetAccounts();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.adrensoftware.com/nexusim/ICoreService/GetAccounts", ReplyAction="http://www.adrensoftware.com/nexusim/ICoreService/GetAccountsResponse")]
        System.IAsyncResult BeginGetAccounts(System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<NexusIM.NexusCore.AccountInfo> EndGetAccounts(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.adrensoftware.com/nexusim/ICoreService/GetLocationData", ReplyAction="http://www.adrensoftware.com/nexusim/ICoreService/GetLocationDataResponse")]
        System.Collections.Generic.List<NexusIM.NexusCore.ContactLocationInfo> GetLocationData();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.adrensoftware.com/nexusim/ICoreService/GetLocationData", ReplyAction="http://www.adrensoftware.com/nexusim/ICoreService/GetLocationDataResponse")]
        System.IAsyncResult BeginGetLocationData(System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<NexusIM.NexusCore.ContactLocationInfo> EndGetLocationData(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.adrensoftware.com/nexusim/ICoreService/GetMyAccountInfo", ReplyAction="http://www.adrensoftware.com/nexusim/ICoreService/GetMyAccountInfoResponse")]
        NexusIM.NexusCore.MyAccountInformation GetMyAccountInfo();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.adrensoftware.com/nexusim/ICoreService/GetMyAccountInfo", ReplyAction="http://www.adrensoftware.com/nexusim/ICoreService/GetMyAccountInfoResponse")]
        System.IAsyncResult BeginGetMyAccountInfo(System.AsyncCallback callback, object asyncState);
        
        NexusIM.NexusCore.MyAccountInformation EndGetMyAccountInfo(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.adrensoftware.com/nexusim/ICoreService/AllAccountCloudLogin", ReplyAction="http://www.adrensoftware.com/nexusim/ICoreService/AllAccountCloudLoginResponse")]
        void AllAccountCloudLogin();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.adrensoftware.com/nexusim/ICoreService/AllAccountCloudLogin", ReplyAction="http://www.adrensoftware.com/nexusim/ICoreService/AllAccountCloudLoginResponse")]
        System.IAsyncResult BeginAllAccountCloudLogin(System.AsyncCallback callback, object asyncState);
        
        void EndAllAccountCloudLogin(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.adrensoftware.com/nexusim/ICoreService/RegisterAsMaster", ReplyAction="http://www.adrensoftware.com/nexusim/ICoreService/RegisterAsMasterResponse")]
        void RegisterAsMaster(int accountid);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.adrensoftware.com/nexusim/ICoreService/RegisterAsMaster", ReplyAction="http://www.adrensoftware.com/nexusim/ICoreService/RegisterAsMasterResponse")]
        System.IAsyncResult BeginRegisterAsMaster(int accountid, System.AsyncCallback callback, object asyncState);
        
        void EndRegisterAsMaster(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.adrensoftware.com/nexusim/ICoreService/UnregisterAsMaster", ReplyAction="http://www.adrensoftware.com/nexusim/ICoreService/UnregisterAsMasterResponse")]
        void UnregisterAsMaster(int accountid);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.adrensoftware.com/nexusim/ICoreService/UnregisterAsMaster", ReplyAction="http://www.adrensoftware.com/nexusim/ICoreService/UnregisterAsMasterResponse")]
        System.IAsyncResult BeginUnregisterAsMaster(int accountid, System.AsyncCallback callback, object asyncState);
        
        void EndUnregisterAsMaster(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.adrensoftware.com/nexusim/ICoreService/GetLocation", ReplyAction="http://www.adrensoftware.com/nexusim/ICoreService/GetLocationResponse")]
        NexusIM.NexusCore.UserLocationData GetLocation(int rowId);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.adrensoftware.com/nexusim/ICoreService/GetLocation", ReplyAction="http://www.adrensoftware.com/nexusim/ICoreService/GetLocationResponse")]
        System.IAsyncResult BeginGetLocation(int rowId, System.AsyncCallback callback, object asyncState);
        
        NexusIM.NexusCore.UserLocationData EndGetLocation(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.adrensoftware.com/nexusim/ICoreService/GetMultipleLocations", ReplyAction="http://www.adrensoftware.com/nexusim/ICoreService/GetMultipleLocationsResponse")]
        System.Collections.Generic.List<NexusIM.NexusCore.UserLocationData> GetMultipleLocations(System.Collections.Generic.List<int> rowIds);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.adrensoftware.com/nexusim/ICoreService/GetMultipleLocations", ReplyAction="http://www.adrensoftware.com/nexusim/ICoreService/GetMultipleLocationsResponse")]
        System.IAsyncResult BeginGetMultipleLocations(System.Collections.Generic.List<int> rowIds, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<NexusIM.NexusCore.UserLocationData> EndGetMultipleLocations(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.adrensoftware.com/nexusim/ICoreService/SwarmTokenSubscribe", ReplyAction="http://www.adrensoftware.com/nexusim/ICoreService/SwarmTokenSubscribeResponse")]
        void SwarmTokenSubscribe(string deviceid);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.adrensoftware.com/nexusim/ICoreService/SwarmTokenSubscribe", ReplyAction="http://www.adrensoftware.com/nexusim/ICoreService/SwarmTokenSubscribeResponse")]
        System.IAsyncResult BeginSwarmTokenSubscribe(string deviceid, System.AsyncCallback callback, object asyncState);
        
        void EndSwarmTokenSubscribe(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.adrensoftware.com/nexusim/ICoreService/SwarmSubscribe", ReplyAction="http://www.adrensoftware.com/nexusim/ICoreService/SwarmSubscribeResponse")]
        void SwarmSubscribe();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.adrensoftware.com/nexusim/ICoreService/SwarmSubscribe", ReplyAction="http://www.adrensoftware.com/nexusim/ICoreService/SwarmSubscribeResponse")]
        System.IAsyncResult BeginSwarmSubscribe(System.AsyncCallback callback, object asyncState);
        
        void EndSwarmSubscribe(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.adrensoftware.com/nexusim/ICoreService/SwarmUnSubscribe", ReplyAction="http://www.adrensoftware.com/nexusim/ICoreService/SwarmUnSubscribeResponse")]
        void SwarmUnSubscribe();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.adrensoftware.com/nexusim/ICoreService/SwarmUnSubscribe", ReplyAction="http://www.adrensoftware.com/nexusim/ICoreService/SwarmUnSubscribeResponse")]
        System.IAsyncResult BeginSwarmUnSubscribe(System.AsyncCallback callback, object asyncState);
        
        void EndSwarmUnSubscribe(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.adrensoftware.com/nexusim/ICoreService/GetSwarmMessages", ReplyAction="http://www.adrensoftware.com/nexusim/ICoreService/GetSwarmMessagesResponse")]
        System.Collections.Generic.List<NexusIM.NexusCore.ISwarmMessage> GetSwarmMessages();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.adrensoftware.com/nexusim/ICoreService/GetSwarmMessages", ReplyAction="http://www.adrensoftware.com/nexusim/ICoreService/GetSwarmMessagesResponse")]
        System.IAsyncResult BeginGetSwarmMessages(System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<NexusIM.NexusCore.ISwarmMessage> EndGetSwarmMessages(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.adrensoftware.com/nexusim/ICoreService/SendSwarmMessage", ReplyAction="http://www.adrensoftware.com/nexusim/ICoreService/SendSwarmMessageResponse")]
        void SendSwarmMessage(NexusIM.NexusCore.ISwarmMessage message, NexusIM.NexusCore.MessageOptions options);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.adrensoftware.com/nexusim/ICoreService/SendSwarmMessage", ReplyAction="http://www.adrensoftware.com/nexusim/ICoreService/SendSwarmMessageResponse")]
        System.IAsyncResult BeginSendSwarmMessage(NexusIM.NexusCore.ISwarmMessage message, NexusIM.NexusCore.MessageOptions options, System.AsyncCallback callback, object asyncState);
        
        void EndSendSwarmMessage(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.adrensoftware.com/nexusim/ICoreService/StartPushMessageStream", ReplyAction="http://www.adrensoftware.com/nexusim/ICoreService/StartPushMessageStreamResponse")]
        void StartPushMessageStream(NexusIM.NexusCore.PushChannelType stype, int port);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.adrensoftware.com/nexusim/ICoreService/StartPushMessageStream", ReplyAction="http://www.adrensoftware.com/nexusim/ICoreService/StartPushMessageStreamResponse")]
        System.IAsyncResult BeginStartPushMessageStream(NexusIM.NexusCore.PushChannelType stype, int port, System.AsyncCallback callback, object asyncState);
        
        void EndStartPushMessageStream(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.adrensoftware.com/nexusim/ICoreService/StartPushMessageStreamUri", ReplyAction="http://www.adrensoftware.com/nexusim/ICoreService/StartPushMessageStreamUriRespon" +
            "se")]
        void StartPushMessageStreamUri(System.Uri urichannel);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.adrensoftware.com/nexusim/ICoreService/StartPushMessageStreamUri", ReplyAction="http://www.adrensoftware.com/nexusim/ICoreService/StartPushMessageStreamUriRespon" +
            "se")]
        System.IAsyncResult BeginStartPushMessageStreamUri(System.Uri urichannel, System.AsyncCallback callback, object asyncState);
        
        void EndStartPushMessageStreamUri(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.adrensoftware.com/nexusim/ICoreService/DeviceKeepAlive", ReplyAction="http://www.adrensoftware.com/nexusim/ICoreService/DeviceKeepAliveResponse")]
        void DeviceKeepAlive();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.adrensoftware.com/nexusim/ICoreService/DeviceKeepAlive", ReplyAction="http://www.adrensoftware.com/nexusim/ICoreService/DeviceKeepAliveResponse")]
        System.IAsyncResult BeginDeviceKeepAlive(System.AsyncCallback callback, object asyncState);
        
        void EndDeviceKeepAlive(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    internal interface ICoreServiceChannel : NexusIM.NexusCore.ICoreService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    internal partial class GenerateTokenCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GenerateTokenCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    internal partial class GetAccountsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAccountsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<NexusIM.NexusCore.AccountInfo> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<NexusIM.NexusCore.AccountInfo>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    internal partial class GetLocationDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetLocationDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<NexusIM.NexusCore.ContactLocationInfo> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<NexusIM.NexusCore.ContactLocationInfo>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    internal partial class GetMyAccountInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetMyAccountInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public NexusIM.NexusCore.MyAccountInformation Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((NexusIM.NexusCore.MyAccountInformation)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    internal partial class GetLocationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetLocationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public NexusIM.NexusCore.UserLocationData Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((NexusIM.NexusCore.UserLocationData)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    internal partial class GetMultipleLocationsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetMultipleLocationsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<NexusIM.NexusCore.UserLocationData> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<NexusIM.NexusCore.UserLocationData>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    internal partial class GetSwarmMessagesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetSwarmMessagesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<NexusIM.NexusCore.ISwarmMessage> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<NexusIM.NexusCore.ISwarmMessage>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    internal partial class CoreServiceClient : System.ServiceModel.ClientBase<NexusIM.NexusCore.ICoreService>, NexusIM.NexusCore.ICoreService {
        
        private BeginOperationDelegate onBeginLoginDelegate;
        
        private EndOperationDelegate onEndLoginDelegate;
        
        private System.Threading.SendOrPostCallback onLoginCompletedDelegate;
        
        private BeginOperationDelegate onBeginLoginWithTokenDelegate;
        
        private EndOperationDelegate onEndLoginWithTokenDelegate;
        
        private System.Threading.SendOrPostCallback onLoginWithTokenCompletedDelegate;
        
        private BeginOperationDelegate onBeginLogoutDelegate;
        
        private EndOperationDelegate onEndLogoutDelegate;
        
        private System.Threading.SendOrPostCallback onLogoutCompletedDelegate;
        
        private BeginOperationDelegate onBeginGenerateTokenDelegate;
        
        private EndOperationDelegate onEndGenerateTokenDelegate;
        
        private System.Threading.SendOrPostCallback onGenerateTokenCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAccountsDelegate;
        
        private EndOperationDelegate onEndGetAccountsDelegate;
        
        private System.Threading.SendOrPostCallback onGetAccountsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetLocationDataDelegate;
        
        private EndOperationDelegate onEndGetLocationDataDelegate;
        
        private System.Threading.SendOrPostCallback onGetLocationDataCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetMyAccountInfoDelegate;
        
        private EndOperationDelegate onEndGetMyAccountInfoDelegate;
        
        private System.Threading.SendOrPostCallback onGetMyAccountInfoCompletedDelegate;
        
        private BeginOperationDelegate onBeginAllAccountCloudLoginDelegate;
        
        private EndOperationDelegate onEndAllAccountCloudLoginDelegate;
        
        private System.Threading.SendOrPostCallback onAllAccountCloudLoginCompletedDelegate;
        
        private BeginOperationDelegate onBeginRegisterAsMasterDelegate;
        
        private EndOperationDelegate onEndRegisterAsMasterDelegate;
        
        private System.Threading.SendOrPostCallback onRegisterAsMasterCompletedDelegate;
        
        private BeginOperationDelegate onBeginUnregisterAsMasterDelegate;
        
        private EndOperationDelegate onEndUnregisterAsMasterDelegate;
        
        private System.Threading.SendOrPostCallback onUnregisterAsMasterCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetLocationDelegate;
        
        private EndOperationDelegate onEndGetLocationDelegate;
        
        private System.Threading.SendOrPostCallback onGetLocationCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetMultipleLocationsDelegate;
        
        private EndOperationDelegate onEndGetMultipleLocationsDelegate;
        
        private System.Threading.SendOrPostCallback onGetMultipleLocationsCompletedDelegate;
        
        private BeginOperationDelegate onBeginSwarmTokenSubscribeDelegate;
        
        private EndOperationDelegate onEndSwarmTokenSubscribeDelegate;
        
        private System.Threading.SendOrPostCallback onSwarmTokenSubscribeCompletedDelegate;
        
        private BeginOperationDelegate onBeginSwarmSubscribeDelegate;
        
        private EndOperationDelegate onEndSwarmSubscribeDelegate;
        
        private System.Threading.SendOrPostCallback onSwarmSubscribeCompletedDelegate;
        
        private BeginOperationDelegate onBeginSwarmUnSubscribeDelegate;
        
        private EndOperationDelegate onEndSwarmUnSubscribeDelegate;
        
        private System.Threading.SendOrPostCallback onSwarmUnSubscribeCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetSwarmMessagesDelegate;
        
        private EndOperationDelegate onEndGetSwarmMessagesDelegate;
        
        private System.Threading.SendOrPostCallback onGetSwarmMessagesCompletedDelegate;
        
        private BeginOperationDelegate onBeginSendSwarmMessageDelegate;
        
        private EndOperationDelegate onEndSendSwarmMessageDelegate;
        
        private System.Threading.SendOrPostCallback onSendSwarmMessageCompletedDelegate;
        
        private BeginOperationDelegate onBeginStartPushMessageStreamDelegate;
        
        private EndOperationDelegate onEndStartPushMessageStreamDelegate;
        
        private System.Threading.SendOrPostCallback onStartPushMessageStreamCompletedDelegate;
        
        private BeginOperationDelegate onBeginStartPushMessageStreamUriDelegate;
        
        private EndOperationDelegate onEndStartPushMessageStreamUriDelegate;
        
        private System.Threading.SendOrPostCallback onStartPushMessageStreamUriCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeviceKeepAliveDelegate;
        
        private EndOperationDelegate onEndDeviceKeepAliveDelegate;
        
        private System.Threading.SendOrPostCallback onDeviceKeepAliveCompletedDelegate;
        
        public CoreServiceClient() {
        }
        
        public CoreServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CoreServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CoreServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CoreServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> LoginCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> LoginWithTokenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> LogoutCompleted;
        
        public event System.EventHandler<GenerateTokenCompletedEventArgs> GenerateTokenCompleted;
        
        public event System.EventHandler<GetAccountsCompletedEventArgs> GetAccountsCompleted;
        
        public event System.EventHandler<GetLocationDataCompletedEventArgs> GetLocationDataCompleted;
        
        public event System.EventHandler<GetMyAccountInfoCompletedEventArgs> GetMyAccountInfoCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> AllAccountCloudLoginCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> RegisterAsMasterCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> UnregisterAsMasterCompleted;
        
        public event System.EventHandler<GetLocationCompletedEventArgs> GetLocationCompleted;
        
        public event System.EventHandler<GetMultipleLocationsCompletedEventArgs> GetMultipleLocationsCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SwarmTokenSubscribeCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SwarmSubscribeCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SwarmUnSubscribeCompleted;
        
        public event System.EventHandler<GetSwarmMessagesCompletedEventArgs> GetSwarmMessagesCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SendSwarmMessageCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> StartPushMessageStreamCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> StartPushMessageStreamUriCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DeviceKeepAliveCompleted;
        
        public void Login(string username, string password) {
            base.Channel.Login(username, password);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginLogin(string username, string password, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginLogin(username, password, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndLogin(System.IAsyncResult result) {
            base.Channel.EndLogin(result);
        }
        
        private System.IAsyncResult OnBeginLogin(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string username = ((string)(inValues[0]));
            string password = ((string)(inValues[1]));
            return this.BeginLogin(username, password, callback, asyncState);
        }
        
        private object[] OnEndLogin(System.IAsyncResult result) {
            this.EndLogin(result);
            return null;
        }
        
        private void OnLoginCompleted(object state) {
            if ((this.LoginCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.LoginCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void LoginAsync(string username, string password) {
            this.LoginAsync(username, password, null);
        }
        
        public void LoginAsync(string username, string password, object userState) {
            if ((this.onBeginLoginDelegate == null)) {
                this.onBeginLoginDelegate = new BeginOperationDelegate(this.OnBeginLogin);
            }
            if ((this.onEndLoginDelegate == null)) {
                this.onEndLoginDelegate = new EndOperationDelegate(this.OnEndLogin);
            }
            if ((this.onLoginCompletedDelegate == null)) {
                this.onLoginCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnLoginCompleted);
            }
            base.InvokeAsync(this.onBeginLoginDelegate, new object[] {
                        username,
                        password}, this.onEndLoginDelegate, this.onLoginCompletedDelegate, userState);
        }
        
        public void LoginWithToken(string token) {
            base.Channel.LoginWithToken(token);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginLoginWithToken(string token, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginLoginWithToken(token, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndLoginWithToken(System.IAsyncResult result) {
            base.Channel.EndLoginWithToken(result);
        }
        
        private System.IAsyncResult OnBeginLoginWithToken(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            return this.BeginLoginWithToken(token, callback, asyncState);
        }
        
        private object[] OnEndLoginWithToken(System.IAsyncResult result) {
            this.EndLoginWithToken(result);
            return null;
        }
        
        private void OnLoginWithTokenCompleted(object state) {
            if ((this.LoginWithTokenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.LoginWithTokenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void LoginWithTokenAsync(string token) {
            this.LoginWithTokenAsync(token, null);
        }
        
        public void LoginWithTokenAsync(string token, object userState) {
            if ((this.onBeginLoginWithTokenDelegate == null)) {
                this.onBeginLoginWithTokenDelegate = new BeginOperationDelegate(this.OnBeginLoginWithToken);
            }
            if ((this.onEndLoginWithTokenDelegate == null)) {
                this.onEndLoginWithTokenDelegate = new EndOperationDelegate(this.OnEndLoginWithToken);
            }
            if ((this.onLoginWithTokenCompletedDelegate == null)) {
                this.onLoginWithTokenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnLoginWithTokenCompleted);
            }
            base.InvokeAsync(this.onBeginLoginWithTokenDelegate, new object[] {
                        token}, this.onEndLoginWithTokenDelegate, this.onLoginWithTokenCompletedDelegate, userState);
        }
        
        public void Logout() {
            base.Channel.Logout();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginLogout(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginLogout(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndLogout(System.IAsyncResult result) {
            base.Channel.EndLogout(result);
        }
        
        private System.IAsyncResult OnBeginLogout(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginLogout(callback, asyncState);
        }
        
        private object[] OnEndLogout(System.IAsyncResult result) {
            this.EndLogout(result);
            return null;
        }
        
        private void OnLogoutCompleted(object state) {
            if ((this.LogoutCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.LogoutCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void LogoutAsync() {
            this.LogoutAsync(null);
        }
        
        public void LogoutAsync(object userState) {
            if ((this.onBeginLogoutDelegate == null)) {
                this.onBeginLogoutDelegate = new BeginOperationDelegate(this.OnBeginLogout);
            }
            if ((this.onEndLogoutDelegate == null)) {
                this.onEndLogoutDelegate = new EndOperationDelegate(this.OnEndLogout);
            }
            if ((this.onLogoutCompletedDelegate == null)) {
                this.onLogoutCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnLogoutCompleted);
            }
            base.InvokeAsync(this.onBeginLogoutDelegate, null, this.onEndLogoutDelegate, this.onLogoutCompletedDelegate, userState);
        }
        
        public string GenerateToken(NexusIM.NexusCore.AuthenticationTokenTypes types) {
            return base.Channel.GenerateToken(types);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGenerateToken(NexusIM.NexusCore.AuthenticationTokenTypes types, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGenerateToken(types, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndGenerateToken(System.IAsyncResult result) {
            return base.Channel.EndGenerateToken(result);
        }
        
        private System.IAsyncResult OnBeginGenerateToken(object[] inValues, System.AsyncCallback callback, object asyncState) {
            NexusIM.NexusCore.AuthenticationTokenTypes types = ((NexusIM.NexusCore.AuthenticationTokenTypes)(inValues[0]));
            return this.BeginGenerateToken(types, callback, asyncState);
        }
        
        private object[] OnEndGenerateToken(System.IAsyncResult result) {
            string retVal = this.EndGenerateToken(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGenerateTokenCompleted(object state) {
            if ((this.GenerateTokenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GenerateTokenCompleted(this, new GenerateTokenCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GenerateTokenAsync(NexusIM.NexusCore.AuthenticationTokenTypes types) {
            this.GenerateTokenAsync(types, null);
        }
        
        public void GenerateTokenAsync(NexusIM.NexusCore.AuthenticationTokenTypes types, object userState) {
            if ((this.onBeginGenerateTokenDelegate == null)) {
                this.onBeginGenerateTokenDelegate = new BeginOperationDelegate(this.OnBeginGenerateToken);
            }
            if ((this.onEndGenerateTokenDelegate == null)) {
                this.onEndGenerateTokenDelegate = new EndOperationDelegate(this.OnEndGenerateToken);
            }
            if ((this.onGenerateTokenCompletedDelegate == null)) {
                this.onGenerateTokenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGenerateTokenCompleted);
            }
            base.InvokeAsync(this.onBeginGenerateTokenDelegate, new object[] {
                        types}, this.onEndGenerateTokenDelegate, this.onGenerateTokenCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<NexusIM.NexusCore.AccountInfo> GetAccounts() {
            return base.Channel.GetAccounts();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAccounts(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAccounts(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<NexusIM.NexusCore.AccountInfo> EndGetAccounts(System.IAsyncResult result) {
            return base.Channel.EndGetAccounts(result);
        }
        
        private System.IAsyncResult OnBeginGetAccounts(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetAccounts(callback, asyncState);
        }
        
        private object[] OnEndGetAccounts(System.IAsyncResult result) {
            System.Collections.Generic.List<NexusIM.NexusCore.AccountInfo> retVal = this.EndGetAccounts(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAccountsCompleted(object state) {
            if ((this.GetAccountsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAccountsCompleted(this, new GetAccountsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAccountsAsync() {
            this.GetAccountsAsync(null);
        }
        
        public void GetAccountsAsync(object userState) {
            if ((this.onBeginGetAccountsDelegate == null)) {
                this.onBeginGetAccountsDelegate = new BeginOperationDelegate(this.OnBeginGetAccounts);
            }
            if ((this.onEndGetAccountsDelegate == null)) {
                this.onEndGetAccountsDelegate = new EndOperationDelegate(this.OnEndGetAccounts);
            }
            if ((this.onGetAccountsCompletedDelegate == null)) {
                this.onGetAccountsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAccountsCompleted);
            }
            base.InvokeAsync(this.onBeginGetAccountsDelegate, null, this.onEndGetAccountsDelegate, this.onGetAccountsCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<NexusIM.NexusCore.ContactLocationInfo> GetLocationData() {
            return base.Channel.GetLocationData();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetLocationData(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetLocationData(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<NexusIM.NexusCore.ContactLocationInfo> EndGetLocationData(System.IAsyncResult result) {
            return base.Channel.EndGetLocationData(result);
        }
        
        private System.IAsyncResult OnBeginGetLocationData(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetLocationData(callback, asyncState);
        }
        
        private object[] OnEndGetLocationData(System.IAsyncResult result) {
            System.Collections.Generic.List<NexusIM.NexusCore.ContactLocationInfo> retVal = this.EndGetLocationData(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetLocationDataCompleted(object state) {
            if ((this.GetLocationDataCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetLocationDataCompleted(this, new GetLocationDataCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetLocationDataAsync() {
            this.GetLocationDataAsync(null);
        }
        
        public void GetLocationDataAsync(object userState) {
            if ((this.onBeginGetLocationDataDelegate == null)) {
                this.onBeginGetLocationDataDelegate = new BeginOperationDelegate(this.OnBeginGetLocationData);
            }
            if ((this.onEndGetLocationDataDelegate == null)) {
                this.onEndGetLocationDataDelegate = new EndOperationDelegate(this.OnEndGetLocationData);
            }
            if ((this.onGetLocationDataCompletedDelegate == null)) {
                this.onGetLocationDataCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetLocationDataCompleted);
            }
            base.InvokeAsync(this.onBeginGetLocationDataDelegate, null, this.onEndGetLocationDataDelegate, this.onGetLocationDataCompletedDelegate, userState);
        }
        
        public NexusIM.NexusCore.MyAccountInformation GetMyAccountInfo() {
            return base.Channel.GetMyAccountInfo();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetMyAccountInfo(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetMyAccountInfo(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public NexusIM.NexusCore.MyAccountInformation EndGetMyAccountInfo(System.IAsyncResult result) {
            return base.Channel.EndGetMyAccountInfo(result);
        }
        
        private System.IAsyncResult OnBeginGetMyAccountInfo(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetMyAccountInfo(callback, asyncState);
        }
        
        private object[] OnEndGetMyAccountInfo(System.IAsyncResult result) {
            NexusIM.NexusCore.MyAccountInformation retVal = this.EndGetMyAccountInfo(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetMyAccountInfoCompleted(object state) {
            if ((this.GetMyAccountInfoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetMyAccountInfoCompleted(this, new GetMyAccountInfoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetMyAccountInfoAsync() {
            this.GetMyAccountInfoAsync(null);
        }
        
        public void GetMyAccountInfoAsync(object userState) {
            if ((this.onBeginGetMyAccountInfoDelegate == null)) {
                this.onBeginGetMyAccountInfoDelegate = new BeginOperationDelegate(this.OnBeginGetMyAccountInfo);
            }
            if ((this.onEndGetMyAccountInfoDelegate == null)) {
                this.onEndGetMyAccountInfoDelegate = new EndOperationDelegate(this.OnEndGetMyAccountInfo);
            }
            if ((this.onGetMyAccountInfoCompletedDelegate == null)) {
                this.onGetMyAccountInfoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetMyAccountInfoCompleted);
            }
            base.InvokeAsync(this.onBeginGetMyAccountInfoDelegate, null, this.onEndGetMyAccountInfoDelegate, this.onGetMyAccountInfoCompletedDelegate, userState);
        }
        
        public void AllAccountCloudLogin() {
            base.Channel.AllAccountCloudLogin();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAllAccountCloudLogin(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAllAccountCloudLogin(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndAllAccountCloudLogin(System.IAsyncResult result) {
            base.Channel.EndAllAccountCloudLogin(result);
        }
        
        private System.IAsyncResult OnBeginAllAccountCloudLogin(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginAllAccountCloudLogin(callback, asyncState);
        }
        
        private object[] OnEndAllAccountCloudLogin(System.IAsyncResult result) {
            this.EndAllAccountCloudLogin(result);
            return null;
        }
        
        private void OnAllAccountCloudLoginCompleted(object state) {
            if ((this.AllAccountCloudLoginCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AllAccountCloudLoginCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AllAccountCloudLoginAsync() {
            this.AllAccountCloudLoginAsync(null);
        }
        
        public void AllAccountCloudLoginAsync(object userState) {
            if ((this.onBeginAllAccountCloudLoginDelegate == null)) {
                this.onBeginAllAccountCloudLoginDelegate = new BeginOperationDelegate(this.OnBeginAllAccountCloudLogin);
            }
            if ((this.onEndAllAccountCloudLoginDelegate == null)) {
                this.onEndAllAccountCloudLoginDelegate = new EndOperationDelegate(this.OnEndAllAccountCloudLogin);
            }
            if ((this.onAllAccountCloudLoginCompletedDelegate == null)) {
                this.onAllAccountCloudLoginCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAllAccountCloudLoginCompleted);
            }
            base.InvokeAsync(this.onBeginAllAccountCloudLoginDelegate, null, this.onEndAllAccountCloudLoginDelegate, this.onAllAccountCloudLoginCompletedDelegate, userState);
        }
        
        public void RegisterAsMaster(int accountid) {
            base.Channel.RegisterAsMaster(accountid);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginRegisterAsMaster(int accountid, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRegisterAsMaster(accountid, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndRegisterAsMaster(System.IAsyncResult result) {
            base.Channel.EndRegisterAsMaster(result);
        }
        
        private System.IAsyncResult OnBeginRegisterAsMaster(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int accountid = ((int)(inValues[0]));
            return this.BeginRegisterAsMaster(accountid, callback, asyncState);
        }
        
        private object[] OnEndRegisterAsMaster(System.IAsyncResult result) {
            this.EndRegisterAsMaster(result);
            return null;
        }
        
        private void OnRegisterAsMasterCompleted(object state) {
            if ((this.RegisterAsMasterCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RegisterAsMasterCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RegisterAsMasterAsync(int accountid) {
            this.RegisterAsMasterAsync(accountid, null);
        }
        
        public void RegisterAsMasterAsync(int accountid, object userState) {
            if ((this.onBeginRegisterAsMasterDelegate == null)) {
                this.onBeginRegisterAsMasterDelegate = new BeginOperationDelegate(this.OnBeginRegisterAsMaster);
            }
            if ((this.onEndRegisterAsMasterDelegate == null)) {
                this.onEndRegisterAsMasterDelegate = new EndOperationDelegate(this.OnEndRegisterAsMaster);
            }
            if ((this.onRegisterAsMasterCompletedDelegate == null)) {
                this.onRegisterAsMasterCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRegisterAsMasterCompleted);
            }
            base.InvokeAsync(this.onBeginRegisterAsMasterDelegate, new object[] {
                        accountid}, this.onEndRegisterAsMasterDelegate, this.onRegisterAsMasterCompletedDelegate, userState);
        }
        
        public void UnregisterAsMaster(int accountid) {
            base.Channel.UnregisterAsMaster(accountid);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginUnregisterAsMaster(int accountid, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUnregisterAsMaster(accountid, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndUnregisterAsMaster(System.IAsyncResult result) {
            base.Channel.EndUnregisterAsMaster(result);
        }
        
        private System.IAsyncResult OnBeginUnregisterAsMaster(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int accountid = ((int)(inValues[0]));
            return this.BeginUnregisterAsMaster(accountid, callback, asyncState);
        }
        
        private object[] OnEndUnregisterAsMaster(System.IAsyncResult result) {
            this.EndUnregisterAsMaster(result);
            return null;
        }
        
        private void OnUnregisterAsMasterCompleted(object state) {
            if ((this.UnregisterAsMasterCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UnregisterAsMasterCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UnregisterAsMasterAsync(int accountid) {
            this.UnregisterAsMasterAsync(accountid, null);
        }
        
        public void UnregisterAsMasterAsync(int accountid, object userState) {
            if ((this.onBeginUnregisterAsMasterDelegate == null)) {
                this.onBeginUnregisterAsMasterDelegate = new BeginOperationDelegate(this.OnBeginUnregisterAsMaster);
            }
            if ((this.onEndUnregisterAsMasterDelegate == null)) {
                this.onEndUnregisterAsMasterDelegate = new EndOperationDelegate(this.OnEndUnregisterAsMaster);
            }
            if ((this.onUnregisterAsMasterCompletedDelegate == null)) {
                this.onUnregisterAsMasterCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUnregisterAsMasterCompleted);
            }
            base.InvokeAsync(this.onBeginUnregisterAsMasterDelegate, new object[] {
                        accountid}, this.onEndUnregisterAsMasterDelegate, this.onUnregisterAsMasterCompletedDelegate, userState);
        }
        
        public NexusIM.NexusCore.UserLocationData GetLocation(int rowId) {
            return base.Channel.GetLocation(rowId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetLocation(int rowId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetLocation(rowId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public NexusIM.NexusCore.UserLocationData EndGetLocation(System.IAsyncResult result) {
            return base.Channel.EndGetLocation(result);
        }
        
        private System.IAsyncResult OnBeginGetLocation(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int rowId = ((int)(inValues[0]));
            return this.BeginGetLocation(rowId, callback, asyncState);
        }
        
        private object[] OnEndGetLocation(System.IAsyncResult result) {
            NexusIM.NexusCore.UserLocationData retVal = this.EndGetLocation(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetLocationCompleted(object state) {
            if ((this.GetLocationCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetLocationCompleted(this, new GetLocationCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetLocationAsync(int rowId) {
            this.GetLocationAsync(rowId, null);
        }
        
        public void GetLocationAsync(int rowId, object userState) {
            if ((this.onBeginGetLocationDelegate == null)) {
                this.onBeginGetLocationDelegate = new BeginOperationDelegate(this.OnBeginGetLocation);
            }
            if ((this.onEndGetLocationDelegate == null)) {
                this.onEndGetLocationDelegate = new EndOperationDelegate(this.OnEndGetLocation);
            }
            if ((this.onGetLocationCompletedDelegate == null)) {
                this.onGetLocationCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetLocationCompleted);
            }
            base.InvokeAsync(this.onBeginGetLocationDelegate, new object[] {
                        rowId}, this.onEndGetLocationDelegate, this.onGetLocationCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<NexusIM.NexusCore.UserLocationData> GetMultipleLocations(System.Collections.Generic.List<int> rowIds) {
            return base.Channel.GetMultipleLocations(rowIds);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetMultipleLocations(System.Collections.Generic.List<int> rowIds, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetMultipleLocations(rowIds, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<NexusIM.NexusCore.UserLocationData> EndGetMultipleLocations(System.IAsyncResult result) {
            return base.Channel.EndGetMultipleLocations(result);
        }
        
        private System.IAsyncResult OnBeginGetMultipleLocations(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Collections.Generic.List<int> rowIds = ((System.Collections.Generic.List<int>)(inValues[0]));
            return this.BeginGetMultipleLocations(rowIds, callback, asyncState);
        }
        
        private object[] OnEndGetMultipleLocations(System.IAsyncResult result) {
            System.Collections.Generic.List<NexusIM.NexusCore.UserLocationData> retVal = this.EndGetMultipleLocations(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetMultipleLocationsCompleted(object state) {
            if ((this.GetMultipleLocationsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetMultipleLocationsCompleted(this, new GetMultipleLocationsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetMultipleLocationsAsync(System.Collections.Generic.List<int> rowIds) {
            this.GetMultipleLocationsAsync(rowIds, null);
        }
        
        public void GetMultipleLocationsAsync(System.Collections.Generic.List<int> rowIds, object userState) {
            if ((this.onBeginGetMultipleLocationsDelegate == null)) {
                this.onBeginGetMultipleLocationsDelegate = new BeginOperationDelegate(this.OnBeginGetMultipleLocations);
            }
            if ((this.onEndGetMultipleLocationsDelegate == null)) {
                this.onEndGetMultipleLocationsDelegate = new EndOperationDelegate(this.OnEndGetMultipleLocations);
            }
            if ((this.onGetMultipleLocationsCompletedDelegate == null)) {
                this.onGetMultipleLocationsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetMultipleLocationsCompleted);
            }
            base.InvokeAsync(this.onBeginGetMultipleLocationsDelegate, new object[] {
                        rowIds}, this.onEndGetMultipleLocationsDelegate, this.onGetMultipleLocationsCompletedDelegate, userState);
        }
        
        public void SwarmTokenSubscribe(string deviceid) {
            base.Channel.SwarmTokenSubscribe(deviceid);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSwarmTokenSubscribe(string deviceid, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSwarmTokenSubscribe(deviceid, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndSwarmTokenSubscribe(System.IAsyncResult result) {
            base.Channel.EndSwarmTokenSubscribe(result);
        }
        
        private System.IAsyncResult OnBeginSwarmTokenSubscribe(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string deviceid = ((string)(inValues[0]));
            return this.BeginSwarmTokenSubscribe(deviceid, callback, asyncState);
        }
        
        private object[] OnEndSwarmTokenSubscribe(System.IAsyncResult result) {
            this.EndSwarmTokenSubscribe(result);
            return null;
        }
        
        private void OnSwarmTokenSubscribeCompleted(object state) {
            if ((this.SwarmTokenSubscribeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SwarmTokenSubscribeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SwarmTokenSubscribeAsync(string deviceid) {
            this.SwarmTokenSubscribeAsync(deviceid, null);
        }
        
        public void SwarmTokenSubscribeAsync(string deviceid, object userState) {
            if ((this.onBeginSwarmTokenSubscribeDelegate == null)) {
                this.onBeginSwarmTokenSubscribeDelegate = new BeginOperationDelegate(this.OnBeginSwarmTokenSubscribe);
            }
            if ((this.onEndSwarmTokenSubscribeDelegate == null)) {
                this.onEndSwarmTokenSubscribeDelegate = new EndOperationDelegate(this.OnEndSwarmTokenSubscribe);
            }
            if ((this.onSwarmTokenSubscribeCompletedDelegate == null)) {
                this.onSwarmTokenSubscribeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSwarmTokenSubscribeCompleted);
            }
            base.InvokeAsync(this.onBeginSwarmTokenSubscribeDelegate, new object[] {
                        deviceid}, this.onEndSwarmTokenSubscribeDelegate, this.onSwarmTokenSubscribeCompletedDelegate, userState);
        }
        
        public void SwarmSubscribe() {
            base.Channel.SwarmSubscribe();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSwarmSubscribe(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSwarmSubscribe(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndSwarmSubscribe(System.IAsyncResult result) {
            base.Channel.EndSwarmSubscribe(result);
        }
        
        private System.IAsyncResult OnBeginSwarmSubscribe(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginSwarmSubscribe(callback, asyncState);
        }
        
        private object[] OnEndSwarmSubscribe(System.IAsyncResult result) {
            this.EndSwarmSubscribe(result);
            return null;
        }
        
        private void OnSwarmSubscribeCompleted(object state) {
            if ((this.SwarmSubscribeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SwarmSubscribeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SwarmSubscribeAsync() {
            this.SwarmSubscribeAsync(null);
        }
        
        public void SwarmSubscribeAsync(object userState) {
            if ((this.onBeginSwarmSubscribeDelegate == null)) {
                this.onBeginSwarmSubscribeDelegate = new BeginOperationDelegate(this.OnBeginSwarmSubscribe);
            }
            if ((this.onEndSwarmSubscribeDelegate == null)) {
                this.onEndSwarmSubscribeDelegate = new EndOperationDelegate(this.OnEndSwarmSubscribe);
            }
            if ((this.onSwarmSubscribeCompletedDelegate == null)) {
                this.onSwarmSubscribeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSwarmSubscribeCompleted);
            }
            base.InvokeAsync(this.onBeginSwarmSubscribeDelegate, null, this.onEndSwarmSubscribeDelegate, this.onSwarmSubscribeCompletedDelegate, userState);
        }
        
        public void SwarmUnSubscribe() {
            base.Channel.SwarmUnSubscribe();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSwarmUnSubscribe(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSwarmUnSubscribe(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndSwarmUnSubscribe(System.IAsyncResult result) {
            base.Channel.EndSwarmUnSubscribe(result);
        }
        
        private System.IAsyncResult OnBeginSwarmUnSubscribe(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginSwarmUnSubscribe(callback, asyncState);
        }
        
        private object[] OnEndSwarmUnSubscribe(System.IAsyncResult result) {
            this.EndSwarmUnSubscribe(result);
            return null;
        }
        
        private void OnSwarmUnSubscribeCompleted(object state) {
            if ((this.SwarmUnSubscribeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SwarmUnSubscribeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SwarmUnSubscribeAsync() {
            this.SwarmUnSubscribeAsync(null);
        }
        
        public void SwarmUnSubscribeAsync(object userState) {
            if ((this.onBeginSwarmUnSubscribeDelegate == null)) {
                this.onBeginSwarmUnSubscribeDelegate = new BeginOperationDelegate(this.OnBeginSwarmUnSubscribe);
            }
            if ((this.onEndSwarmUnSubscribeDelegate == null)) {
                this.onEndSwarmUnSubscribeDelegate = new EndOperationDelegate(this.OnEndSwarmUnSubscribe);
            }
            if ((this.onSwarmUnSubscribeCompletedDelegate == null)) {
                this.onSwarmUnSubscribeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSwarmUnSubscribeCompleted);
            }
            base.InvokeAsync(this.onBeginSwarmUnSubscribeDelegate, null, this.onEndSwarmUnSubscribeDelegate, this.onSwarmUnSubscribeCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<NexusIM.NexusCore.ISwarmMessage> GetSwarmMessages() {
            return base.Channel.GetSwarmMessages();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetSwarmMessages(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetSwarmMessages(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<NexusIM.NexusCore.ISwarmMessage> EndGetSwarmMessages(System.IAsyncResult result) {
            return base.Channel.EndGetSwarmMessages(result);
        }
        
        private System.IAsyncResult OnBeginGetSwarmMessages(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetSwarmMessages(callback, asyncState);
        }
        
        private object[] OnEndGetSwarmMessages(System.IAsyncResult result) {
            System.Collections.Generic.List<NexusIM.NexusCore.ISwarmMessage> retVal = this.EndGetSwarmMessages(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetSwarmMessagesCompleted(object state) {
            if ((this.GetSwarmMessagesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetSwarmMessagesCompleted(this, new GetSwarmMessagesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetSwarmMessagesAsync() {
            this.GetSwarmMessagesAsync(null);
        }
        
        public void GetSwarmMessagesAsync(object userState) {
            if ((this.onBeginGetSwarmMessagesDelegate == null)) {
                this.onBeginGetSwarmMessagesDelegate = new BeginOperationDelegate(this.OnBeginGetSwarmMessages);
            }
            if ((this.onEndGetSwarmMessagesDelegate == null)) {
                this.onEndGetSwarmMessagesDelegate = new EndOperationDelegate(this.OnEndGetSwarmMessages);
            }
            if ((this.onGetSwarmMessagesCompletedDelegate == null)) {
                this.onGetSwarmMessagesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetSwarmMessagesCompleted);
            }
            base.InvokeAsync(this.onBeginGetSwarmMessagesDelegate, null, this.onEndGetSwarmMessagesDelegate, this.onGetSwarmMessagesCompletedDelegate, userState);
        }
        
        public void SendSwarmMessage(NexusIM.NexusCore.ISwarmMessage message, NexusIM.NexusCore.MessageOptions options) {
            base.Channel.SendSwarmMessage(message, options);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSendSwarmMessage(NexusIM.NexusCore.ISwarmMessage message, NexusIM.NexusCore.MessageOptions options, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSendSwarmMessage(message, options, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndSendSwarmMessage(System.IAsyncResult result) {
            base.Channel.EndSendSwarmMessage(result);
        }
        
        private System.IAsyncResult OnBeginSendSwarmMessage(object[] inValues, System.AsyncCallback callback, object asyncState) {
            NexusIM.NexusCore.ISwarmMessage message = ((NexusIM.NexusCore.ISwarmMessage)(inValues[0]));
            NexusIM.NexusCore.MessageOptions options = ((NexusIM.NexusCore.MessageOptions)(inValues[1]));
            return this.BeginSendSwarmMessage(message, options, callback, asyncState);
        }
        
        private object[] OnEndSendSwarmMessage(System.IAsyncResult result) {
            this.EndSendSwarmMessage(result);
            return null;
        }
        
        private void OnSendSwarmMessageCompleted(object state) {
            if ((this.SendSwarmMessageCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SendSwarmMessageCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SendSwarmMessageAsync(NexusIM.NexusCore.ISwarmMessage message, NexusIM.NexusCore.MessageOptions options) {
            this.SendSwarmMessageAsync(message, options, null);
        }
        
        public void SendSwarmMessageAsync(NexusIM.NexusCore.ISwarmMessage message, NexusIM.NexusCore.MessageOptions options, object userState) {
            if ((this.onBeginSendSwarmMessageDelegate == null)) {
                this.onBeginSendSwarmMessageDelegate = new BeginOperationDelegate(this.OnBeginSendSwarmMessage);
            }
            if ((this.onEndSendSwarmMessageDelegate == null)) {
                this.onEndSendSwarmMessageDelegate = new EndOperationDelegate(this.OnEndSendSwarmMessage);
            }
            if ((this.onSendSwarmMessageCompletedDelegate == null)) {
                this.onSendSwarmMessageCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSendSwarmMessageCompleted);
            }
            base.InvokeAsync(this.onBeginSendSwarmMessageDelegate, new object[] {
                        message,
                        options}, this.onEndSendSwarmMessageDelegate, this.onSendSwarmMessageCompletedDelegate, userState);
        }
        
        public void StartPushMessageStream(NexusIM.NexusCore.PushChannelType stype, int port) {
            base.Channel.StartPushMessageStream(stype, port);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginStartPushMessageStream(NexusIM.NexusCore.PushChannelType stype, int port, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginStartPushMessageStream(stype, port, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndStartPushMessageStream(System.IAsyncResult result) {
            base.Channel.EndStartPushMessageStream(result);
        }
        
        private System.IAsyncResult OnBeginStartPushMessageStream(object[] inValues, System.AsyncCallback callback, object asyncState) {
            NexusIM.NexusCore.PushChannelType stype = ((NexusIM.NexusCore.PushChannelType)(inValues[0]));
            int port = ((int)(inValues[1]));
            return this.BeginStartPushMessageStream(stype, port, callback, asyncState);
        }
        
        private object[] OnEndStartPushMessageStream(System.IAsyncResult result) {
            this.EndStartPushMessageStream(result);
            return null;
        }
        
        private void OnStartPushMessageStreamCompleted(object state) {
            if ((this.StartPushMessageStreamCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.StartPushMessageStreamCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void StartPushMessageStreamAsync(NexusIM.NexusCore.PushChannelType stype, int port) {
            this.StartPushMessageStreamAsync(stype, port, null);
        }
        
        public void StartPushMessageStreamAsync(NexusIM.NexusCore.PushChannelType stype, int port, object userState) {
            if ((this.onBeginStartPushMessageStreamDelegate == null)) {
                this.onBeginStartPushMessageStreamDelegate = new BeginOperationDelegate(this.OnBeginStartPushMessageStream);
            }
            if ((this.onEndStartPushMessageStreamDelegate == null)) {
                this.onEndStartPushMessageStreamDelegate = new EndOperationDelegate(this.OnEndStartPushMessageStream);
            }
            if ((this.onStartPushMessageStreamCompletedDelegate == null)) {
                this.onStartPushMessageStreamCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnStartPushMessageStreamCompleted);
            }
            base.InvokeAsync(this.onBeginStartPushMessageStreamDelegate, new object[] {
                        stype,
                        port}, this.onEndStartPushMessageStreamDelegate, this.onStartPushMessageStreamCompletedDelegate, userState);
        }
        
        public void StartPushMessageStreamUri(System.Uri urichannel) {
            base.Channel.StartPushMessageStreamUri(urichannel);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginStartPushMessageStreamUri(System.Uri urichannel, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginStartPushMessageStreamUri(urichannel, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndStartPushMessageStreamUri(System.IAsyncResult result) {
            base.Channel.EndStartPushMessageStreamUri(result);
        }
        
        private System.IAsyncResult OnBeginStartPushMessageStreamUri(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Uri urichannel = ((System.Uri)(inValues[0]));
            return this.BeginStartPushMessageStreamUri(urichannel, callback, asyncState);
        }
        
        private object[] OnEndStartPushMessageStreamUri(System.IAsyncResult result) {
            this.EndStartPushMessageStreamUri(result);
            return null;
        }
        
        private void OnStartPushMessageStreamUriCompleted(object state) {
            if ((this.StartPushMessageStreamUriCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.StartPushMessageStreamUriCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void StartPushMessageStreamUriAsync(System.Uri urichannel) {
            this.StartPushMessageStreamUriAsync(urichannel, null);
        }
        
        public void StartPushMessageStreamUriAsync(System.Uri urichannel, object userState) {
            if ((this.onBeginStartPushMessageStreamUriDelegate == null)) {
                this.onBeginStartPushMessageStreamUriDelegate = new BeginOperationDelegate(this.OnBeginStartPushMessageStreamUri);
            }
            if ((this.onEndStartPushMessageStreamUriDelegate == null)) {
                this.onEndStartPushMessageStreamUriDelegate = new EndOperationDelegate(this.OnEndStartPushMessageStreamUri);
            }
            if ((this.onStartPushMessageStreamUriCompletedDelegate == null)) {
                this.onStartPushMessageStreamUriCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnStartPushMessageStreamUriCompleted);
            }
            base.InvokeAsync(this.onBeginStartPushMessageStreamUriDelegate, new object[] {
                        urichannel}, this.onEndStartPushMessageStreamUriDelegate, this.onStartPushMessageStreamUriCompletedDelegate, userState);
        }
        
        public void DeviceKeepAlive() {
            base.Channel.DeviceKeepAlive();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDeviceKeepAlive(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeviceKeepAlive(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndDeviceKeepAlive(System.IAsyncResult result) {
            base.Channel.EndDeviceKeepAlive(result);
        }
        
        private System.IAsyncResult OnBeginDeviceKeepAlive(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginDeviceKeepAlive(callback, asyncState);
        }
        
        private object[] OnEndDeviceKeepAlive(System.IAsyncResult result) {
            this.EndDeviceKeepAlive(result);
            return null;
        }
        
        private void OnDeviceKeepAliveCompleted(object state) {
            if ((this.DeviceKeepAliveCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeviceKeepAliveCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeviceKeepAliveAsync() {
            this.DeviceKeepAliveAsync(null);
        }
        
        public void DeviceKeepAliveAsync(object userState) {
            if ((this.onBeginDeviceKeepAliveDelegate == null)) {
                this.onBeginDeviceKeepAliveDelegate = new BeginOperationDelegate(this.OnBeginDeviceKeepAlive);
            }
            if ((this.onEndDeviceKeepAliveDelegate == null)) {
                this.onEndDeviceKeepAliveDelegate = new EndOperationDelegate(this.OnEndDeviceKeepAlive);
            }
            if ((this.onDeviceKeepAliveCompletedDelegate == null)) {
                this.onDeviceKeepAliveCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeviceKeepAliveCompleted);
            }
            base.InvokeAsync(this.onBeginDeviceKeepAliveDelegate, null, this.onEndDeviceKeepAliveDelegate, this.onDeviceKeepAliveCompletedDelegate, userState);
        }
    }
}
