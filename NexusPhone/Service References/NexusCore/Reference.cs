//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.Phone.ServiceReference, version 3.7.0.0
// 
namespace NexusPhone.NexusCore {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ContactInfo", Namespace="com.nexus-im")]
    public partial class ContactInfo : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string FirstNameField;
        
        private string LastNameField;
        
        private System.Collections.Generic.List<NexusPhone.NexusCore.PhoneNumber> PhoneNumbersField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<NexusPhone.NexusCore.PhoneNumber> PhoneNumbers {
            get {
                return this.PhoneNumbersField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneNumbersField, value) != true)) {
                    this.PhoneNumbersField = value;
                    this.RaisePropertyChanged("PhoneNumbers");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PhoneNumber", Namespace="com.nexus-im")]
    public partial class PhoneNumber : object, System.ComponentModel.INotifyPropertyChanged {
        
        private ushort CountryCodeField;
        
        private System.Nullable<ushort> ExtensionField;
        
        private string SubscriberNumberField;
        
        private NexusPhone.NexusCore.PhoneType TypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ushort CountryCode {
            get {
                return this.CountryCodeField;
            }
            set {
                if ((this.CountryCodeField.Equals(value) != true)) {
                    this.CountryCodeField = value;
                    this.RaisePropertyChanged("CountryCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public System.Nullable<ushort> Extension {
            get {
                return this.ExtensionField;
            }
            set {
                if ((this.ExtensionField.Equals(value) != true)) {
                    this.ExtensionField = value;
                    this.RaisePropertyChanged("Extension");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SubscriberNumber {
            get {
                return this.SubscriberNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.SubscriberNumberField, value) != true)) {
                    this.SubscriberNumberField = value;
                    this.RaisePropertyChanged("SubscriberNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public NexusPhone.NexusCore.PhoneType Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PhoneType", Namespace="com.nexus-im")]
    public enum PhoneType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Mobile = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Home = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Office = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AccountInfo", Namespace="com.nexus-im")]
    public partial class AccountInfo : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int AccountIdField;
        
        private bool EnabledField;
        
        private System.Guid GuidField;
        
        private string PasswordField;
        
        private string ProtocolTypeField;
        
        private string ServerField;
        
        private NexusPhone.NexusCore.IMProtocolStatus StatusField;
        
        private string UsernameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AccountId {
            get {
                return this.AccountIdField;
            }
            set {
                if ((this.AccountIdField.Equals(value) != true)) {
                    this.AccountIdField = value;
                    this.RaisePropertyChanged("AccountId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Enabled {
            get {
                return this.EnabledField;
            }
            set {
                if ((this.EnabledField.Equals(value) != true)) {
                    this.EnabledField = value;
                    this.RaisePropertyChanged("Enabled");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Guid {
            get {
                return this.GuidField;
            }
            set {
                if ((this.GuidField.Equals(value) != true)) {
                    this.GuidField = value;
                    this.RaisePropertyChanged("Guid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProtocolType {
            get {
                return this.ProtocolTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ProtocolTypeField, value) != true)) {
                    this.ProtocolTypeField = value;
                    this.RaisePropertyChanged("ProtocolType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Server {
            get {
                return this.ServerField;
            }
            set {
                if ((object.ReferenceEquals(this.ServerField, value) != true)) {
                    this.ServerField = value;
                    this.RaisePropertyChanged("Server");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public NexusPhone.NexusCore.IMProtocolStatus Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Username {
            get {
                return this.UsernameField;
            }
            set {
                if ((object.ReferenceEquals(this.UsernameField, value) != true)) {
                    this.UsernameField = value;
                    this.RaisePropertyChanged("Username");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="IMProtocolStatus", Namespace="http://schemas.datacontract.org/2004/07/InstantMessage")]
    public enum IMProtocolStatus : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ONLINE = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CONNECTING = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ERROR = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OFFLINE = 3,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="com.nexusim.mobile", ConfigurationName="NexusCore.CoreService")]
    public interface CoreService {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="com.nexusim.mobile/CoreService/Login", ReplyAction="com.nexusim.mobile/CoreService/LoginResponse")]
        System.IAsyncResult BeginLogin(string username, string password, System.AsyncCallback callback, object asyncState);
        
        void EndLogin(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="com.nexusim.mobile/CoreService/GetContactInfo", ReplyAction="com.nexusim.mobile/CoreService/GetContactInfoResponse")]
        System.IAsyncResult BeginGetContactInfo(int userid, System.AsyncCallback callback, object asyncState);
        
        NexusPhone.NexusCore.ContactInfo EndGetContactInfo(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="com.nexusim.mobile/CoreService/AccountsSignedIn", ReplyAction="com.nexusim.mobile/CoreService/AccountsSignedInResponse")]
        System.IAsyncResult BeginAccountsSignedIn(System.AsyncCallback callback, object asyncState);
        
        bool EndAccountsSignedIn(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="com.nexusim.mobile/CoreService/GetAccounts", ReplyAction="com.nexusim.mobile/CoreService/GetAccountsResponse")]
        System.IAsyncResult BeginGetAccounts(System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<NexusPhone.NexusCore.AccountInfo> EndGetAccounts(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface CoreServiceChannel : NexusPhone.NexusCore.CoreService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetContactInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetContactInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public NexusPhone.NexusCore.ContactInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((NexusPhone.NexusCore.ContactInfo)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AccountsSignedInCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AccountsSignedInCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAccountsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAccountsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<NexusPhone.NexusCore.AccountInfo> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<NexusPhone.NexusCore.AccountInfo>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CoreServiceClient : System.ServiceModel.ClientBase<NexusPhone.NexusCore.CoreService>, NexusPhone.NexusCore.CoreService {
        
        private BeginOperationDelegate onBeginLoginDelegate;
        
        private EndOperationDelegate onEndLoginDelegate;
        
        private System.Threading.SendOrPostCallback onLoginCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetContactInfoDelegate;
        
        private EndOperationDelegate onEndGetContactInfoDelegate;
        
        private System.Threading.SendOrPostCallback onGetContactInfoCompletedDelegate;
        
        private BeginOperationDelegate onBeginAccountsSignedInDelegate;
        
        private EndOperationDelegate onEndAccountsSignedInDelegate;
        
        private System.Threading.SendOrPostCallback onAccountsSignedInCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAccountsDelegate;
        
        private EndOperationDelegate onEndGetAccountsDelegate;
        
        private System.Threading.SendOrPostCallback onGetAccountsCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public CoreServiceClient() {
        }
        
        public CoreServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CoreServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CoreServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CoreServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> LoginCompleted;
        
        public event System.EventHandler<GetContactInfoCompletedEventArgs> GetContactInfoCompleted;
        
        public event System.EventHandler<AccountsSignedInCompletedEventArgs> AccountsSignedInCompleted;
        
        public event System.EventHandler<GetAccountsCompletedEventArgs> GetAccountsCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult NexusPhone.NexusCore.CoreService.BeginLogin(string username, string password, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginLogin(username, password, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void NexusPhone.NexusCore.CoreService.EndLogin(System.IAsyncResult result) {
            base.Channel.EndLogin(result);
        }
        
        private System.IAsyncResult OnBeginLogin(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string username = ((string)(inValues[0]));
            string password = ((string)(inValues[1]));
            return ((NexusPhone.NexusCore.CoreService)(this)).BeginLogin(username, password, callback, asyncState);
        }
        
        private object[] OnEndLogin(System.IAsyncResult result) {
            ((NexusPhone.NexusCore.CoreService)(this)).EndLogin(result);
            return null;
        }
        
        private void OnLoginCompleted(object state) {
            if ((this.LoginCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.LoginCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void LoginAsync(string username, string password) {
            this.LoginAsync(username, password, null);
        }
        
        public void LoginAsync(string username, string password, object userState) {
            if ((this.onBeginLoginDelegate == null)) {
                this.onBeginLoginDelegate = new BeginOperationDelegate(this.OnBeginLogin);
            }
            if ((this.onEndLoginDelegate == null)) {
                this.onEndLoginDelegate = new EndOperationDelegate(this.OnEndLogin);
            }
            if ((this.onLoginCompletedDelegate == null)) {
                this.onLoginCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnLoginCompleted);
            }
            base.InvokeAsync(this.onBeginLoginDelegate, new object[] {
                        username,
                        password}, this.onEndLoginDelegate, this.onLoginCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult NexusPhone.NexusCore.CoreService.BeginGetContactInfo(int userid, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetContactInfo(userid, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        NexusPhone.NexusCore.ContactInfo NexusPhone.NexusCore.CoreService.EndGetContactInfo(System.IAsyncResult result) {
            return base.Channel.EndGetContactInfo(result);
        }
        
        private System.IAsyncResult OnBeginGetContactInfo(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int userid = ((int)(inValues[0]));
            return ((NexusPhone.NexusCore.CoreService)(this)).BeginGetContactInfo(userid, callback, asyncState);
        }
        
        private object[] OnEndGetContactInfo(System.IAsyncResult result) {
            NexusPhone.NexusCore.ContactInfo retVal = ((NexusPhone.NexusCore.CoreService)(this)).EndGetContactInfo(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetContactInfoCompleted(object state) {
            if ((this.GetContactInfoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetContactInfoCompleted(this, new GetContactInfoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetContactInfoAsync(int userid) {
            this.GetContactInfoAsync(userid, null);
        }
        
        public void GetContactInfoAsync(int userid, object userState) {
            if ((this.onBeginGetContactInfoDelegate == null)) {
                this.onBeginGetContactInfoDelegate = new BeginOperationDelegate(this.OnBeginGetContactInfo);
            }
            if ((this.onEndGetContactInfoDelegate == null)) {
                this.onEndGetContactInfoDelegate = new EndOperationDelegate(this.OnEndGetContactInfo);
            }
            if ((this.onGetContactInfoCompletedDelegate == null)) {
                this.onGetContactInfoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetContactInfoCompleted);
            }
            base.InvokeAsync(this.onBeginGetContactInfoDelegate, new object[] {
                        userid}, this.onEndGetContactInfoDelegate, this.onGetContactInfoCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult NexusPhone.NexusCore.CoreService.BeginAccountsSignedIn(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAccountsSignedIn(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool NexusPhone.NexusCore.CoreService.EndAccountsSignedIn(System.IAsyncResult result) {
            return base.Channel.EndAccountsSignedIn(result);
        }
        
        private System.IAsyncResult OnBeginAccountsSignedIn(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((NexusPhone.NexusCore.CoreService)(this)).BeginAccountsSignedIn(callback, asyncState);
        }
        
        private object[] OnEndAccountsSignedIn(System.IAsyncResult result) {
            bool retVal = ((NexusPhone.NexusCore.CoreService)(this)).EndAccountsSignedIn(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAccountsSignedInCompleted(object state) {
            if ((this.AccountsSignedInCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AccountsSignedInCompleted(this, new AccountsSignedInCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AccountsSignedInAsync() {
            this.AccountsSignedInAsync(null);
        }
        
        public void AccountsSignedInAsync(object userState) {
            if ((this.onBeginAccountsSignedInDelegate == null)) {
                this.onBeginAccountsSignedInDelegate = new BeginOperationDelegate(this.OnBeginAccountsSignedIn);
            }
            if ((this.onEndAccountsSignedInDelegate == null)) {
                this.onEndAccountsSignedInDelegate = new EndOperationDelegate(this.OnEndAccountsSignedIn);
            }
            if ((this.onAccountsSignedInCompletedDelegate == null)) {
                this.onAccountsSignedInCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAccountsSignedInCompleted);
            }
            base.InvokeAsync(this.onBeginAccountsSignedInDelegate, null, this.onEndAccountsSignedInDelegate, this.onAccountsSignedInCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult NexusPhone.NexusCore.CoreService.BeginGetAccounts(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAccounts(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.Generic.List<NexusPhone.NexusCore.AccountInfo> NexusPhone.NexusCore.CoreService.EndGetAccounts(System.IAsyncResult result) {
            return base.Channel.EndGetAccounts(result);
        }
        
        private System.IAsyncResult OnBeginGetAccounts(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((NexusPhone.NexusCore.CoreService)(this)).BeginGetAccounts(callback, asyncState);
        }
        
        private object[] OnEndGetAccounts(System.IAsyncResult result) {
            System.Collections.Generic.List<NexusPhone.NexusCore.AccountInfo> retVal = ((NexusPhone.NexusCore.CoreService)(this)).EndGetAccounts(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAccountsCompleted(object state) {
            if ((this.GetAccountsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAccountsCompleted(this, new GetAccountsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAccountsAsync() {
            this.GetAccountsAsync(null);
        }
        
        public void GetAccountsAsync(object userState) {
            if ((this.onBeginGetAccountsDelegate == null)) {
                this.onBeginGetAccountsDelegate = new BeginOperationDelegate(this.OnBeginGetAccounts);
            }
            if ((this.onEndGetAccountsDelegate == null)) {
                this.onEndGetAccountsDelegate = new EndOperationDelegate(this.OnEndGetAccounts);
            }
            if ((this.onGetAccountsCompletedDelegate == null)) {
                this.onGetAccountsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAccountsCompleted);
            }
            base.InvokeAsync(this.onBeginGetAccountsDelegate, null, this.onEndGetAccountsDelegate, this.onGetAccountsCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override NexusPhone.NexusCore.CoreService CreateChannel() {
            return new CoreServiceClientChannel(this);
        }
        
        private class CoreServiceClientChannel : ChannelBase<NexusPhone.NexusCore.CoreService>, NexusPhone.NexusCore.CoreService {
            
            public CoreServiceClientChannel(System.ServiceModel.ClientBase<NexusPhone.NexusCore.CoreService> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginLogin(string username, string password, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = username;
                _args[1] = password;
                System.IAsyncResult _result = base.BeginInvoke("Login", _args, callback, asyncState);
                return _result;
            }
            
            public void EndLogin(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("Login", _args, result);
            }
            
            public System.IAsyncResult BeginGetContactInfo(int userid, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = userid;
                System.IAsyncResult _result = base.BeginInvoke("GetContactInfo", _args, callback, asyncState);
                return _result;
            }
            
            public NexusPhone.NexusCore.ContactInfo EndGetContactInfo(System.IAsyncResult result) {
                object[] _args = new object[0];
                NexusPhone.NexusCore.ContactInfo _result = ((NexusPhone.NexusCore.ContactInfo)(base.EndInvoke("GetContactInfo", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginAccountsSignedIn(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("AccountsSignedIn", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndAccountsSignedIn(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("AccountsSignedIn", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetAccounts(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetAccounts", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.Generic.List<NexusPhone.NexusCore.AccountInfo> EndGetAccounts(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.Generic.List<NexusPhone.NexusCore.AccountInfo> _result = ((System.Collections.Generic.List<NexusPhone.NexusCore.AccountInfo>)(base.EndInvoke("GetAccounts", _args, result)));
                return _result;
            }
        }
    }
}
