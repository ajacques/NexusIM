#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace NexusCore.Databases
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="GeoData")]
	public partial class GeoDataDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertCity(City instance);
    partial void UpdateCity(City instance);
    partial void DeleteCity(City instance);
    partial void InsertUSA_State(USA_State instance);
    partial void UpdateUSA_State(USA_State instance);
    partial void DeleteUSA_State(USA_State instance);
    partial void InsertAdminLevel2(AdminLevel2 instance);
    partial void UpdateAdminLevel2(AdminLevel2 instance);
    partial void DeleteAdminLevel2(AdminLevel2 instance);
    partial void InsertAdminLevel1(AdminLevel1 instance);
    partial void UpdateAdminLevel1(AdminLevel1 instance);
    partial void DeleteAdminLevel1(AdminLevel1 instance);
    #endregion
		
		public GeoDataDataContext() : 
				base(global::NexusCore.Databases.Properties.Settings.Default.GeoDataConnectionString1, mappingSource)
		{
			OnCreated();
		}
		
		public GeoDataDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public GeoDataDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public GeoDataDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public GeoDataDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Country> Countries
		{
			get
			{
				return this.GetTable<Country>();
			}
		}
		
		public System.Data.Linq.Table<City> Cities
		{
			get
			{
				return this.GetTable<City>();
			}
		}
		
		public System.Data.Linq.Table<USA_State> USA_States
		{
			get
			{
				return this.GetTable<USA_State>();
			}
		}
		
		public System.Data.Linq.Table<AdminLevel2> AdminLevel2s
		{
			get
			{
				return this.GetTable<AdminLevel2>();
			}
		}
		
		public System.Data.Linq.Table<AdminLevel1> AdminLevel1s
		{
			get
			{
				return this.GetTable<AdminLevel1>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetCountry")]
		public ISingleResult<Country> GetCountry([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Float")] System.Nullable<double> lat, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Float")] System.Nullable<double> lng)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), lat, lng);
			return ((ISingleResult<Country>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetNearestCity")]
		public ISingleResult<City> GetNearestCity([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Float")] System.Nullable<double> lat, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Float")] System.Nullable<double> lng)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), lat, lng);
			return ((ISingleResult<City>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetUSAState")]
		public ISingleResult<USA_State> GetUSAState([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Float")] System.Nullable<double> lat, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Float")] System.Nullable<double> lng)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), lat, lng);
			return ((ISingleResult<USA_State>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetAdminLevel1")]
		public ISingleResult<AdminLevel1> GetAdminLevel1([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Float")] System.Nullable<double> lat, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Float")] System.Nullable<double> lng)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), lat, lng);
			return ((ISingleResult<AdminLevel1>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetAdminLevel2")]
		public ISingleResult<AdminLevel2> GetAdminLevel2([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Float")] System.Nullable<double> lat, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Float")] System.Nullable<double> lng)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), lat, lng);
			return ((ISingleResult<AdminLevel2>)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Countries")]
	public partial class Country
	{
		
		private string _ISO;
		
		private string _EquivalentFipsCode;
		
		private string _ISO3;
		
		private int _ISO_Numeric;
		
		private string _fips;
		
		private string _Name;
		
		private string _Capital;
		
		private System.Nullable<float> _Area_in_sq_km_;
		
		private System.Nullable<long> _Population;
		
		private string _Continent;
		
		private string _tld;
		
		private string _CurrencyCode;
		
		private string _CurrencyName;
		
		private string _Phone;
		
		private string _Postal_Code_Format;
		
		private string _Postal_Code_Regex;
		
		private string _Languages;
		
		private long _geonameid;
		
		private string _neighbours;
		
		private Microsoft.SqlServer.Types.SqlGeometry _GeoData;
		
		public Country()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ISO", DbType="VarChar(2) NOT NULL", CanBeNull=false)]
		public string ISO
		{
			get
			{
				return this._ISO;
			}
			set
			{
				if ((this._ISO != value))
				{
					this._ISO = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EquivalentFipsCode", DbType="VarChar(2)")]
		public string EquivalentFipsCode
		{
			get
			{
				return this._EquivalentFipsCode;
			}
			set
			{
				if ((this._EquivalentFipsCode != value))
				{
					this._EquivalentFipsCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ISO3", DbType="VarChar(3) NOT NULL", CanBeNull=false)]
		public string ISO3
		{
			get
			{
				return this._ISO3;
			}
			set
			{
				if ((this._ISO3 != value))
				{
					this._ISO3 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[ISO-Numeric]", Storage="_ISO_Numeric", DbType="Int NOT NULL")]
		public int ISO_Numeric
		{
			get
			{
				return this._ISO_Numeric;
			}
			set
			{
				if ((this._ISO_Numeric != value))
				{
					this._ISO_Numeric = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fips", DbType="VarChar(2)")]
		public string fips
		{
			get
			{
				return this._fips;
			}
			set
			{
				if ((this._fips != value))
				{
					this._fips = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(70) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Capital", DbType="NVarChar(70)")]
		public string Capital
		{
			get
			{
				return this._Capital;
			}
			set
			{
				if ((this._Capital != value))
				{
					this._Capital = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Area(in sq km)]", Storage="_Area_in_sq_km_", DbType="Real")]
		public System.Nullable<float> Area
		{
			get
			{
				return this._Area_in_sq_km_;
			}
			set
			{
				if ((this._Area_in_sq_km_ != value))
				{
					this._Area_in_sq_km_ = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Population", DbType="BigInt")]
		public System.Nullable<long> Population
		{
			get
			{
				return this._Population;
			}
			set
			{
				if ((this._Population != value))
				{
					this._Population = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Continent", DbType="VarChar(2) NOT NULL", CanBeNull=false)]
		public string Continent
		{
			get
			{
				return this._Continent;
			}
			set
			{
				if ((this._Continent != value))
				{
					this._Continent = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tld", DbType="VarChar(3)")]
		public string tld
		{
			get
			{
				return this._tld;
			}
			set
			{
				if ((this._tld != value))
				{
					this._tld = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrencyCode", DbType="VarChar(3)")]
		public string CurrencyCode
		{
			get
			{
				return this._CurrencyCode;
			}
			set
			{
				if ((this._CurrencyCode != value))
				{
					this._CurrencyCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrencyName", DbType="VarChar(13)")]
		public string CurrencyName
		{
			get
			{
				return this._CurrencyName;
			}
			set
			{
				if ((this._CurrencyName != value))
				{
					this._CurrencyName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="VarChar(16)")]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this._Phone = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Postal Code Format]", Storage="_Postal_Code_Format", DbType="VarChar(200)")]
		public string Postal_Code_Format
		{
			get
			{
				return this._Postal_Code_Format;
			}
			set
			{
				if ((this._Postal_Code_Format != value))
				{
					this._Postal_Code_Format = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Postal Code Regex]", Storage="_Postal_Code_Regex", DbType="VarChar(200)")]
		public string Postal_Code_Regex
		{
			get
			{
				return this._Postal_Code_Regex;
			}
			set
			{
				if ((this._Postal_Code_Regex != value))
				{
					this._Postal_Code_Regex = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Languages", DbType="VarChar(100)")]
		public string Languages
		{
			get
			{
				return this._Languages;
			}
			set
			{
				if ((this._Languages != value))
				{
					this._Languages = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_geonameid", DbType="BigInt NOT NULL")]
		public long geonameid
		{
			get
			{
				return this._geonameid;
			}
			set
			{
				if ((this._geonameid != value))
				{
					this._geonameid = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_neighbours", DbType="VarChar(41)")]
		public string neighbours
		{
			get
			{
				return this._neighbours;
			}
			set
			{
				if ((this._neighbours != value))
				{
					this._neighbours = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GeoData")]
		public Microsoft.SqlServer.Types.SqlGeometry GeoData
		{
			get
			{
				return this._GeoData;
			}
			set
			{
				if ((this._GeoData != value))
				{
					this._GeoData = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Cities")]
	public partial class City : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _geonameid;
		
		private string _name;
		
		private string _asciiname;
		
		private string _alternatenames;
		
		private double _latitude;
		
		private double _longitude;
		
		private string _feature_class;
		
		private string _feature_code;
		
		private string _country_code;
		
		private string _cc2;
		
		private string _admin1_code;
		
		private string _admin2_code;
		
		private string _admin3_code;
		
		private string _admin4_code;
		
		private System.Nullable<int> _population;
		
		private System.Nullable<int> _elevation;
		
		private System.Nullable<int> _gtopo30;
		
		private string _timezone;
		
		private Microsoft.SqlServer.Types.SqlGeography _GeoData;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OngeonameidChanging(int value);
    partial void OngeonameidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnasciinameChanging(string value);
    partial void OnasciinameChanged();
    partial void OnalternatenamesChanging(string value);
    partial void OnalternatenamesChanged();
    partial void OnlatitudeChanging(double value);
    partial void OnlatitudeChanged();
    partial void OnlongitudeChanging(double value);
    partial void OnlongitudeChanged();
    partial void Onfeature_classChanging(string value);
    partial void Onfeature_classChanged();
    partial void Onfeature_codeChanging(string value);
    partial void Onfeature_codeChanged();
    partial void Oncountry_codeChanging(string value);
    partial void Oncountry_codeChanged();
    partial void Oncc2Changing(string value);
    partial void Oncc2Changed();
    partial void Onadmin1_codeChanging(string value);
    partial void Onadmin1_codeChanged();
    partial void Onadmin2_codeChanging(string value);
    partial void Onadmin2_codeChanged();
    partial void Onadmin3_codeChanging(string value);
    partial void Onadmin3_codeChanged();
    partial void Onadmin4_codeChanging(string value);
    partial void Onadmin4_codeChanged();
    partial void OnpopulationChanging(System.Nullable<int> value);
    partial void OnpopulationChanged();
    partial void OnelevationChanging(System.Nullable<int> value);
    partial void OnelevationChanged();
    partial void Ongtopo30Changing(System.Nullable<int> value);
    partial void Ongtopo30Changed();
    partial void OntimezoneChanging(string value);
    partial void OntimezoneChanged();
    partial void OnGeoDataChanging(Microsoft.SqlServer.Types.SqlGeography value);
    partial void OnGeoDataChanged();
    #endregion
		
		public City()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_geonameid", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int geonameid
		{
			get
			{
				return this._geonameid;
			}
			set
			{
				if ((this._geonameid != value))
				{
					this.OngeonameidChanging(value);
					this.SendPropertyChanging();
					this._geonameid = value;
					this.SendPropertyChanged("geonameid");
					this.OngeonameidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_asciiname", DbType="NVarChar(200)")]
		public string asciiname
		{
			get
			{
				return this._asciiname;
			}
			set
			{
				if ((this._asciiname != value))
				{
					this.OnasciinameChanging(value);
					this.SendPropertyChanging();
					this._asciiname = value;
					this.SendPropertyChanged("asciiname");
					this.OnasciinameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_alternatenames", DbType="NVarChar(MAX)")]
		public string alternatenames
		{
			get
			{
				return this._alternatenames;
			}
			set
			{
				if ((this._alternatenames != value))
				{
					this.OnalternatenamesChanging(value);
					this.SendPropertyChanging();
					this._alternatenames = value;
					this.SendPropertyChanged("alternatenames");
					this.OnalternatenamesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_latitude", DbType="Float NOT NULL")]
		public double latitude
		{
			get
			{
				return this._latitude;
			}
			set
			{
				if ((this._latitude != value))
				{
					this.OnlatitudeChanging(value);
					this.SendPropertyChanging();
					this._latitude = value;
					this.SendPropertyChanged("latitude");
					this.OnlatitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_longitude", DbType="Float NOT NULL")]
		public double longitude
		{
			get
			{
				return this._longitude;
			}
			set
			{
				if ((this._longitude != value))
				{
					this.OnlongitudeChanging(value);
					this.SendPropertyChanging();
					this._longitude = value;
					this.SendPropertyChanged("longitude");
					this.OnlongitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_feature_class", DbType="Char(2)")]
		public string feature_class
		{
			get
			{
				return this._feature_class;
			}
			set
			{
				if ((this._feature_class != value))
				{
					this.Onfeature_classChanging(value);
					this.SendPropertyChanging();
					this._feature_class = value;
					this.SendPropertyChanged("feature_class");
					this.Onfeature_classChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_feature_code", DbType="NVarChar(10)")]
		public string feature_code
		{
			get
			{
				return this._feature_code;
			}
			set
			{
				if ((this._feature_code != value))
				{
					this.Onfeature_codeChanging(value);
					this.SendPropertyChanging();
					this._feature_code = value;
					this.SendPropertyChanged("feature_code");
					this.Onfeature_codeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_country_code", DbType="Char(3) NOT NULL", CanBeNull=false)]
		public string country_code
		{
			get
			{
				return this._country_code;
			}
			set
			{
				if ((this._country_code != value))
				{
					this.Oncountry_codeChanging(value);
					this.SendPropertyChanging();
					this._country_code = value;
					this.SendPropertyChanged("country_code");
					this.Oncountry_codeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cc2", DbType="Char(60)")]
		public string cc2
		{
			get
			{
				return this._cc2;
			}
			set
			{
				if ((this._cc2 != value))
				{
					this.Oncc2Changing(value);
					this.SendPropertyChanging();
					this._cc2 = value;
					this.SendPropertyChanged("cc2");
					this.Oncc2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_admin1_code", DbType="NVarChar(20)")]
		public string admin1_code
		{
			get
			{
				return this._admin1_code;
			}
			set
			{
				if ((this._admin1_code != value))
				{
					this.Onadmin1_codeChanging(value);
					this.SendPropertyChanging();
					this._admin1_code = value;
					this.SendPropertyChanged("admin1_code");
					this.Onadmin1_codeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_admin2_code", DbType="NVarChar(80)")]
		public string admin2_code
		{
			get
			{
				return this._admin2_code;
			}
			set
			{
				if ((this._admin2_code != value))
				{
					this.Onadmin2_codeChanging(value);
					this.SendPropertyChanging();
					this._admin2_code = value;
					this.SendPropertyChanged("admin2_code");
					this.Onadmin2_codeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_admin3_code", DbType="NVarChar(20)")]
		public string admin3_code
		{
			get
			{
				return this._admin3_code;
			}
			set
			{
				if ((this._admin3_code != value))
				{
					this.Onadmin3_codeChanging(value);
					this.SendPropertyChanging();
					this._admin3_code = value;
					this.SendPropertyChanged("admin3_code");
					this.Onadmin3_codeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_admin4_code", DbType="NVarChar(20)")]
		public string admin4_code
		{
			get
			{
				return this._admin4_code;
			}
			set
			{
				if ((this._admin4_code != value))
				{
					this.Onadmin4_codeChanging(value);
					this.SendPropertyChanging();
					this._admin4_code = value;
					this.SendPropertyChanged("admin4_code");
					this.Onadmin4_codeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_population", DbType="Int")]
		public System.Nullable<int> population
		{
			get
			{
				return this._population;
			}
			set
			{
				if ((this._population != value))
				{
					this.OnpopulationChanging(value);
					this.SendPropertyChanging();
					this._population = value;
					this.SendPropertyChanged("population");
					this.OnpopulationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_elevation", DbType="Int")]
		public System.Nullable<int> elevation
		{
			get
			{
				return this._elevation;
			}
			set
			{
				if ((this._elevation != value))
				{
					this.OnelevationChanging(value);
					this.SendPropertyChanging();
					this._elevation = value;
					this.SendPropertyChanged("elevation");
					this.OnelevationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gtopo30", DbType="Int")]
		public System.Nullable<int> gtopo30
		{
			get
			{
				return this._gtopo30;
			}
			set
			{
				if ((this._gtopo30 != value))
				{
					this.Ongtopo30Changing(value);
					this.SendPropertyChanging();
					this._gtopo30 = value;
					this.SendPropertyChanged("gtopo30");
					this.Ongtopo30Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_timezone", DbType="Char(31)")]
		public string timezone
		{
			get
			{
				return this._timezone;
			}
			set
			{
				if ((this._timezone != value))
				{
					this.OntimezoneChanging(value);
					this.SendPropertyChanging();
					this._timezone = value;
					this.SendPropertyChanged("timezone");
					this.OntimezoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="geog", Storage="_GeoData", CanBeNull=false)]
		public Microsoft.SqlServer.Types.SqlGeography GeoData
		{
			get
			{
				return this._GeoData;
			}
			set
			{
				if ((this._GeoData != value))
				{
					this.OnGeoDataChanging(value);
					this.SendPropertyChanging();
					this._GeoData = value;
					this.SendPropertyChanged("GeoData");
					this.OnGeoDataChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.USA_States")]
	public partial class USA_State : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Fips;
		
		private string _Name;
		
		private string _TwoDigitId;
		
		private Microsoft.SqlServer.Types.SqlGeography _GeoData;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnFipsChanging(string value);
    partial void OnFipsChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnTwoDigitIdChanging(string value);
    partial void OnTwoDigitIdChanged();
    partial void OnGeoDataChanging(Microsoft.SqlServer.Types.SqlGeography value);
    partial void OnGeoDataChanged();
    #endregion
		
		public USA_State()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fips", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Fips
		{
			get
			{
				return this._Fips;
			}
			set
			{
				if ((this._Fips != value))
				{
					this.OnFipsChanging(value);
					this.SendPropertyChanging();
					this._Fips = value;
					this.SendPropertyChanged("Fips");
					this.OnFipsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TwoDigitId", DbType="Char(2) NOT NULL", CanBeNull=false)]
		public string TwoDigitId
		{
			get
			{
				return this._TwoDigitId;
			}
			set
			{
				if ((this._TwoDigitId != value))
				{
					this.OnTwoDigitIdChanging(value);
					this.SendPropertyChanging();
					this._TwoDigitId = value;
					this.SendPropertyChanged("TwoDigitId");
					this.OnTwoDigitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GeoData", CanBeNull=false)]
		public Microsoft.SqlServer.Types.SqlGeography GeoData
		{
			get
			{
				return this._GeoData;
			}
			set
			{
				if ((this._GeoData != value))
				{
					this.OnGeoDataChanging(value);
					this.SendPropertyChanging();
					this._GeoData = value;
					this.SendPropertyChanged("GeoData");
					this.OnGeoDataChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AdminLevel2")]
	public partial class AdminLevel2 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Remarks;
		
		private int _Id;
		
		private string _CountryISO;
		
		private string _TwoDigitId;
		
		private string _Name;
		
		private string _VarName;
		
		private int _ParentId;
		
		private string _HASC;
		
		private string _Type;
		
		private string _EnglishType;
		
		private string _ValidFrom;
		
		private string _ValidTo;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRemarksChanging(string value);
    partial void OnRemarksChanged();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCountryISOChanging(string value);
    partial void OnCountryISOChanged();
    partial void OnTwoDigitIdChanging(string value);
    partial void OnTwoDigitIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnVarNameChanging(string value);
    partial void OnVarNameChanged();
    partial void OnParentIdChanging(int value);
    partial void OnParentIdChanged();
    partial void OnHASCChanging(string value);
    partial void OnHASCChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    partial void OnEnglishTypeChanging(string value);
    partial void OnEnglishTypeChanged();
    partial void OnValidFromChanging(string value);
    partial void OnValidFromChanged();
    partial void OnValidToChanging(string value);
    partial void OnValidToChanged();
    #endregion
		
		public AdminLevel2()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remarks", DbType="VarChar(255)")]
		public string Remarks
		{
			get
			{
				return this._Remarks;
			}
			set
			{
				if ((this._Remarks != value))
				{
					this.OnRemarksChanging(value);
					this.SendPropertyChanging();
					this._Remarks = value;
					this.SendPropertyChanged("Remarks");
					this.OnRemarksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryISO", DbType="Char(3) NOT NULL", CanBeNull=false)]
		public string CountryISO
		{
			get
			{
				return this._CountryISO;
			}
			set
			{
				if ((this._CountryISO != value))
				{
					this.OnCountryISOChanging(value);
					this.SendPropertyChanging();
					this._CountryISO = value;
					this.SendPropertyChanged("CountryISO");
					this.OnCountryISOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TwoDigitId", DbType="Char(2) NOT NULL", CanBeNull=false)]
		public string TwoDigitId
		{
			get
			{
				return this._TwoDigitId;
			}
			set
			{
				if ((this._TwoDigitId != value))
				{
					this.OnTwoDigitIdChanging(value);
					this.SendPropertyChanging();
					this._TwoDigitId = value;
					this.SendPropertyChanged("TwoDigitId");
					this.OnTwoDigitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VarName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string VarName
		{
			get
			{
				return this._VarName;
			}
			set
			{
				if ((this._VarName != value))
				{
					this.OnVarNameChanging(value);
					this.SendPropertyChanging();
					this._VarName = value;
					this.SendPropertyChanged("VarName");
					this.OnVarNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentId", DbType="Int NOT NULL")]
		public int ParentId
		{
			get
			{
				return this._ParentId;
			}
			set
			{
				if ((this._ParentId != value))
				{
					this.OnParentIdChanging(value);
					this.SendPropertyChanging();
					this._ParentId = value;
					this.SendPropertyChanged("ParentId");
					this.OnParentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HASC", DbType="Char(11) NOT NULL", CanBeNull=false)]
		public string HASC
		{
			get
			{
				return this._HASC;
			}
			set
			{
				if ((this._HASC != value))
				{
					this.OnHASCChanging(value);
					this.SendPropertyChanging();
					this._HASC = value;
					this.SendPropertyChanged("HASC");
					this.OnHASCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="VarChar(64) NOT NULL", CanBeNull=false)]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnglishType", DbType="VarChar(64) NOT NULL", CanBeNull=false)]
		public string EnglishType
		{
			get
			{
				return this._EnglishType;
			}
			set
			{
				if ((this._EnglishType != value))
				{
					this.OnEnglishTypeChanging(value);
					this.SendPropertyChanging();
					this._EnglishType = value;
					this.SendPropertyChanged("EnglishType");
					this.OnEnglishTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ValidFrom", DbType="VarChar(32)")]
		public string ValidFrom
		{
			get
			{
				return this._ValidFrom;
			}
			set
			{
				if ((this._ValidFrom != value))
				{
					this.OnValidFromChanging(value);
					this.SendPropertyChanging();
					this._ValidFrom = value;
					this.SendPropertyChanged("ValidFrom");
					this.OnValidFromChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ValidTo", DbType="VarChar(32)")]
		public string ValidTo
		{
			get
			{
				return this._ValidTo;
			}
			set
			{
				if ((this._ValidTo != value))
				{
					this.OnValidToChanging(value);
					this.SendPropertyChanging();
					this._ValidTo = value;
					this.SendPropertyChanged("ValidTo");
					this.OnValidToChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AdminLevel1")]
	public partial class AdminLevel1 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowId;
		
		private string _Remarks;
		
		private int _GeoId;
		
		private string _CountryISO;
		
		private string _TwoDigitId;
		
		private string _Name;
		
		private string _VarName;
		
		private int _ParentId;
		
		private string _HASC;
		
		private string _Type;
		
		private string _EnglishType;
		
		private string _ValidFrom;
		
		private string _ValidTo;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowIdChanging(int value);
    partial void OnRowIdChanged();
    partial void OnRemarksChanging(string value);
    partial void OnRemarksChanged();
    partial void OnGeoIdChanging(int value);
    partial void OnGeoIdChanged();
    partial void OnCountryISOChanging(string value);
    partial void OnCountryISOChanged();
    partial void OnTwoDigitIdChanging(string value);
    partial void OnTwoDigitIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnVarNameChanging(string value);
    partial void OnVarNameChanged();
    partial void OnParentIdChanging(int value);
    partial void OnParentIdChanged();
    partial void OnHASCChanging(string value);
    partial void OnHASCChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    partial void OnEnglishTypeChanging(string value);
    partial void OnEnglishTypeChanged();
    partial void OnValidFromChanging(string value);
    partial void OnValidFromChanged();
    partial void OnValidToChanging(string value);
    partial void OnValidToChanged();
    #endregion
		
		public AdminLevel1()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RowId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int RowId
		{
			get
			{
				return this._RowId;
			}
			set
			{
				if ((this._RowId != value))
				{
					this.OnRowIdChanging(value);
					this.SendPropertyChanging();
					this._RowId = value;
					this.SendPropertyChanged("RowId");
					this.OnRowIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remarks", DbType="VarChar(255)")]
		public string Remarks
		{
			get
			{
				return this._Remarks;
			}
			set
			{
				if ((this._Remarks != value))
				{
					this.OnRemarksChanging(value);
					this.SendPropertyChanging();
					this._Remarks = value;
					this.SendPropertyChanged("Remarks");
					this.OnRemarksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GeoId", DbType="Int NOT NULL")]
		public int GeoId
		{
			get
			{
				return this._GeoId;
			}
			set
			{
				if ((this._GeoId != value))
				{
					this.OnGeoIdChanging(value);
					this.SendPropertyChanging();
					this._GeoId = value;
					this.SendPropertyChanged("GeoId");
					this.OnGeoIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryISO", DbType="Char(3) NOT NULL", CanBeNull=false)]
		public string CountryISO
		{
			get
			{
				return this._CountryISO;
			}
			set
			{
				if ((this._CountryISO != value))
				{
					this.OnCountryISOChanging(value);
					this.SendPropertyChanging();
					this._CountryISO = value;
					this.SendPropertyChanged("CountryISO");
					this.OnCountryISOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TwoDigitId", DbType="Char(2) NOT NULL", CanBeNull=false)]
		public string TwoDigitId
		{
			get
			{
				return this._TwoDigitId;
			}
			set
			{
				if ((this._TwoDigitId != value))
				{
					this.OnTwoDigitIdChanging(value);
					this.SendPropertyChanging();
					this._TwoDigitId = value;
					this.SendPropertyChanged("TwoDigitId");
					this.OnTwoDigitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VarName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string VarName
		{
			get
			{
				return this._VarName;
			}
			set
			{
				if ((this._VarName != value))
				{
					this.OnVarNameChanging(value);
					this.SendPropertyChanging();
					this._VarName = value;
					this.SendPropertyChanged("VarName");
					this.OnVarNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentId", DbType="Int NOT NULL")]
		public int ParentId
		{
			get
			{
				return this._ParentId;
			}
			set
			{
				if ((this._ParentId != value))
				{
					this.OnParentIdChanging(value);
					this.SendPropertyChanging();
					this._ParentId = value;
					this.SendPropertyChanged("ParentId");
					this.OnParentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HASC", DbType="Char(11) NOT NULL", CanBeNull=false)]
		public string HASC
		{
			get
			{
				return this._HASC;
			}
			set
			{
				if ((this._HASC != value))
				{
					this.OnHASCChanging(value);
					this.SendPropertyChanging();
					this._HASC = value;
					this.SendPropertyChanged("HASC");
					this.OnHASCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="VarChar(64) NOT NULL", CanBeNull=false)]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnglishType", DbType="VarChar(64) NOT NULL", CanBeNull=false)]
		public string EnglishType
		{
			get
			{
				return this._EnglishType;
			}
			set
			{
				if ((this._EnglishType != value))
				{
					this.OnEnglishTypeChanging(value);
					this.SendPropertyChanging();
					this._EnglishType = value;
					this.SendPropertyChanged("EnglishType");
					this.OnEnglishTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ValidFrom", DbType="VarChar(32)")]
		public string ValidFrom
		{
			get
			{
				return this._ValidFrom;
			}
			set
			{
				if ((this._ValidFrom != value))
				{
					this.OnValidFromChanging(value);
					this.SendPropertyChanging();
					this._ValidFrom = value;
					this.SendPropertyChanged("ValidFrom");
					this.OnValidFromChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ValidTo", DbType="VarChar(32)")]
		public string ValidTo
		{
			get
			{
				return this._ValidTo;
			}
			set
			{
				if ((this._ValidTo != value))
				{
					this.OnValidToChanging(value);
					this.SendPropertyChanging();
					this._ValidTo = value;
					this.SendPropertyChanged("ValidTo");
					this.OnValidToChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
